[{"/home/james/Desktop/deckstars/client/src/index.js":"1","/home/james/Desktop/deckstars/client/src/App.js":"2","/home/james/Desktop/deckstars/client/src/components/SplashPage.js":"3","/home/james/Desktop/deckstars/client/src/services/auth.js":"4","/home/james/Desktop/deckstars/client/src/MainContext.js":"5","/home/james/Desktop/deckstars/client/src/theme/mui_theme.js":"6","/home/james/Desktop/deckstars/client/src/styles/navbarstyles.js":"7","/home/james/Desktop/deckstars/client/src/components/nav/NavBar.js":"8","/home/james/Desktop/deckstars/client/src/components/nav/NavLogin.js":"9","/home/james/Desktop/deckstars/client/src/components/nav/NavMenu.js":"10","/home/james/Desktop/deckstars/client/src/components/SignUpForm.js":"11","/home/james/Desktop/deckstars/client/src/components/HomePage.js":"12","/home/james/Desktop/deckstars/client/src/components/PrivateRoute.js":"13","/home/james/Desktop/deckstars/client/src/styles/homepagestyles.js":"14","/home/james/Desktop/deckstars/client/src/styles/signupformstyles.js":"15","/home/james/Desktop/deckstars/client/src/styles/navmenustyles.js":"16","/home/james/Desktop/deckstars/client/src/components/DeckDetails.js":"17","/home/james/Desktop/deckstars/client/src/components/DeckInfo.js":"18","/home/james/Desktop/deckstars/client/src/components/homepage/HomePageLeft.js":"19","/home/james/Desktop/deckstars/client/src/components/homepage/DeckCards.js":"20","/home/james/Desktop/deckstars/client/src/components/MUI_custom/Custom_Accordion.js":"21"},{"size":305,"mtime":1611868324515,"results":"22","hashOfConfig":"23"},{"size":1618,"mtime":1612138522482,"results":"24","hashOfConfig":"23"},{"size":192,"mtime":1612138229229,"results":"25","hashOfConfig":"23"},{"size":1331,"mtime":1612124733842,"results":"26","hashOfConfig":"23"},{"size":1461,"mtime":1612124415967,"results":"27","hashOfConfig":"23"},{"size":742,"mtime":1611800004853,"results":"28","hashOfConfig":"23"},{"size":1684,"mtime":1612138576137,"results":"29","hashOfConfig":"23"},{"size":1179,"mtime":1611869813027,"results":"30","hashOfConfig":"23"},{"size":3352,"mtime":1611873864325,"results":"31","hashOfConfig":"23"},{"size":1617,"mtime":1612138765104,"results":"32","hashOfConfig":"23"},{"size":2952,"mtime":1611867361222,"results":"33","hashOfConfig":"23"},{"size":1406,"mtime":1612136674250,"results":"34","hashOfConfig":"23"},{"size":578,"mtime":1611861912966,"results":"35","hashOfConfig":"23"},{"size":665,"mtime":1612139529584,"results":"36","hashOfConfig":"23"},{"size":641,"mtime":1612138048774,"results":"37","hashOfConfig":"23"},{"size":143,"mtime":1612138601960,"results":"38","hashOfConfig":"23"},{"size":1465,"mtime":1612131718763,"results":"39","hashOfConfig":"23"},{"size":2117,"mtime":1612135076490,"results":"40","hashOfConfig":"23"},{"size":2215,"mtime":1612139587002,"results":"41","hashOfConfig":"23"},{"size":4590,"mtime":1612136464553,"results":"42","hashOfConfig":"23"},{"size":1393,"mtime":1612135044199,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1p0v3vd",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/home/james/Desktop/deckstars/client/src/index.js",[],["91","92"],"/home/james/Desktop/deckstars/client/src/App.js",[],"/home/james/Desktop/deckstars/client/src/components/SplashPage.js",[],"/home/james/Desktop/deckstars/client/src/services/auth.js",[],"/home/james/Desktop/deckstars/client/src/MainContext.js",[],"/home/james/Desktop/deckstars/client/src/theme/mui_theme.js",[],"/home/james/Desktop/deckstars/client/src/styles/navbarstyles.js",[],"/home/james/Desktop/deckstars/client/src/components/nav/NavBar.js",[],"/home/james/Desktop/deckstars/client/src/components/nav/NavLogin.js",[],"/home/james/Desktop/deckstars/client/src/components/nav/NavMenu.js",[],"/home/james/Desktop/deckstars/client/src/components/SignUpForm.js",[],"/home/james/Desktop/deckstars/client/src/components/HomePage.js",["93","94"],"import React, { useEffect, useContext } from \"react\";\nimport { Switch, useLocation } from \"react-router-dom\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport HomePageLeft from \"./homepage/HomePageLeft\";\nimport DeckDetails from \"./DeckDetails\";\nimport DeckCards from \"./homepage/DeckCards\";\nimport { MainContext } from \"../MainContext\";\nimport { Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nimport homepagestyles from \"../styles/homepagestyles\";\n\nconst useStyles = makeStyles((theme) => homepagestyles);\n\nconst HomePage = () => {\n  const { user, setCurrentDeck } = useContext(MainContext);\n  const styles = useStyles();\n\n  useEffect(() => {\n    setCurrentDeck(JSON.parse(window.localStorage.getItem(\"last-deck\")) || {});\n  }, [setCurrentDeck]);\n\n  return (\n    <div className={styles.homepage_container}>\n      <Box className={styles.homepage_top}></Box>\n      <Box className={styles.homepage_bottom}>\n        <HomePageLeft className={styles.homepage_left} />\n        <Box className={styles.homepage_center}>\n          <Switch>\n            <PrivateRoute path=\"/decks/:id\" component={DeckCards} />\n          </Switch>\n        </Box>\n        <Box className={styles.homepage_right}>\n          <Switch>\n            <PrivateRoute path=\"/decks/:deckId\" component={DeckDetails} />\n          </Switch>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default HomePage;\n","/home/james/Desktop/deckstars/client/src/components/PrivateRoute.js",[],"/home/james/Desktop/deckstars/client/src/styles/homepagestyles.js",[],"/home/james/Desktop/deckstars/client/src/styles/signupformstyles.js",[],"/home/james/Desktop/deckstars/client/src/styles/navmenustyles.js",[],"/home/james/Desktop/deckstars/client/src/components/DeckDetails.js",["95"],"import React, { useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { MainContext } from \"../MainContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  deck_details_container: {\n    color: \"white\",\n    padding: \"10px\",\n  },\n  deck_record: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n}));\n\nconst DeckDetails = () => {\n  const { currentDeck } = useContext(MainContext);\n\n  const styles = useStyles();\n\n  if (!currentDeck) {\n    return null;\n  }\n\n  return (\n    <Box className={styles.deck_details_container}>\n      <Typography variant=\"h4\">{currentDeck.name}</Typography>\n      <Typography variant=\"body2\">\n        Created By: {currentDeck.user.username}\n      </Typography>\n      <Typography variant=\"body2\">Format: {currentDeck.format}</Typography>\n      <Box className={styles.deck_record}>\n        <Typography variant=\"caption\">Wins: {currentDeck.wins}</Typography>\n        <Typography variant=\"caption\">Losses: {currentDeck.losses}</Typography>\n        <Typography variant=\"caption\">\n          Winrate:{\" \"}\n          {currentDeck.wins\n            ? currentDeck.wins / (currentDeck.wins + currentDeck.losses)\n            : 0}\n        </Typography>\n      </Box>\n      <Box>\n        <Typography variant=\"body1\">{currentDeck.description}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default DeckDetails;\n","/home/james/Desktop/deckstars/client/src/components/DeckInfo.js",["96"],"import React, { useContext } from \"react\";\nimport { Link, withRouter, useHistory } from \"react-router-dom\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nimport { MainContext } from \"../MainContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    textDecoration: \"none\",\n    color: \"white\",\n  },\n  deckinfo_container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    backgroundColor: theme.palette.secondary.light,\n    height: \"80px\",\n    maxWidth: \"100%\",\n    marginBottom: \"5px\",\n    padding: \"10px\",\n    // boxSizing: \"border-box\",\n  },\n  row_one: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    margin: \"5px\",\n  },\n  row_two: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    margin: \"5px\",\n  },\n}));\n\nconst DeckInfo = ({ deck }) => {\n  const { setCurrentDeck } = useContext(MainContext);\n  const styles = useStyles();\n  const handleClick = async (e) => {\n    const token = window.localStorage.getItem(\"token\");\n    let foundDeck = await fetch(`/api/decks/${deck.id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const parsedDeck = await foundDeck.json();\n    setCurrentDeck(parsedDeck);\n    window.localStorage.setItem(\"last-deck\", JSON.stringify(parsedDeck));\n  };\n\n  return (\n    <Link\n      to={`/decks/${deck.id}`}\n      key={deck.id}\n      className={styles.link}\n      onClick={(e) => handleClick(e)}\n    >\n      <Box className={styles.deckinfo_container}>\n        <Box className={styles.row_one}>\n          <Typography>{deck.name}</Typography>\n          <Typography>{deck.format}</Typography>\n        </Box>\n        <Box className={styles.row_two}>\n          <Typography variant=\"body2\">Wins: {deck.wins}</Typography>\n          <Typography variant=\"body2\">Losses: {deck.losses}</Typography>\n          <Typography variant=\"body2\">\n            Winrate: {deck.wins ? deck.wins / (deck.wins + deck.losses) : 0}\n          </Typography>\n        </Box>\n      </Box>\n    </Link>\n  );\n};\n\nexport default withRouter(DeckInfo);\n","/home/james/Desktop/deckstars/client/src/components/homepage/HomePageLeft.js",[],"/home/james/Desktop/deckstars/client/src/components/homepage/DeckCards.js",["97","98"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from \"../MUI_custom/Custom_Accordion\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { MainContext } from \"../../MainContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  deck_cards: {\n    backgroundColor: theme.palette.secondary.main,\n    minWidth: \"100%\",\n    // overflowY: \"auto\",\n  },\n  header: {\n    color: \"white\",\n    padding: \"3px 10px\",\n  },\n  table_header: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 5fr 2fr 3fr 1fr\",\n    padding: \"3px 16px\",\n    justifyContent: \"space-between\",\n    color: \"white\",\n  },\n  quantity_header: {\n    marginLeft: \"11px\",\n  },\n  summary: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 5fr 2fr 3fr\",\n    width: \"100%\",\n  },\n  quant_info: {\n    marginLeft: \"10px\",\n  },\n  open: {\n    display: \"flex\",\n    margin: \"0 100px\",\n    backgroundColor: theme.palette.secondary.light,\n  },\n  card_info: {\n    margin: \"0px 20px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  mana_cost_symbols: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginLeft: \"5px\",\n  },\n  card_symbol_img: {\n    height: \"0.875rem\",\n    marginRight: \"5px\",\n  },\n  img_small: {\n    backgroundColor: theme.palette.secondary.light,\n  },\n  flavorText: {\n    fontStyle: \"italic\",\n  },\n}));\n\nconst DeckCards = () => {\n  const { currentDeck, symbols } = useContext(MainContext);\n  const [expanded, setExpanded] = useState(false);\n  const styles = useStyles();\n\n  const findSymbols = (str) => {\n    const regex = /\\{(.*?)\\}/g;\n    return str.match(regex);\n  };\n\n  const handleChange = (panel) => (event, newExpanded) => {\n    setExpanded(newExpanded ? panel : false);\n  };\n\n  if (!currentDeck) {\n    return <h1>NO CURRENT DECK</h1>;\n  }\n\n  return (\n    <Box className={styles.deck_cards}>\n      <Typography variant=\"h4\" className={styles.header}>\n        MainDeck\n      </Typography>\n      <Box className={styles.table_header}>\n        <Typography variant=\"body2\" className={styles.quantity_header}>\n          #\n        </Typography>\n        <Typography variant=\"body2\">Name</Typography>\n        <Typography variant=\"body2\">ManaCost</Typography>\n        <Typography variant=\"body2\">Type</Typography>\n      </Box>\n      {currentDeck.mainDeck.map((slot, i) => {\n        let { card } = slot;\n        return (\n          <Accordion\n            square\n            expanded={expanded === `panel${i + 1}`}\n            onChange={handleChange(`panel${i + 1}`)}\n            key={card.uuid}\n          >\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon color=\"primary\" />}\n              aria-controls={`panel${i + 1} content`}\n            >\n              <Box className={styles.summary}>\n                <Typography variant=\"body2\" className={styles.quant_info}>\n                  {slot.quantity}\n                </Typography>\n                <Typography variant=\"body2\">{card.name}</Typography>\n                <Box className={styles.mana_cost_symbols}>\n                  {card.manaCost &&\n                    findSymbols(card.manaCost).map((symbol, i) => {\n                      return (\n                        <img\n                          key={symbol + `${i}`}\n                          className={styles.card_symbol_img}\n                          alt=\"Card Symbol\"\n                          src={symbols[symbol]}\n                        ></img>\n                      );\n                    })}\n                </Box>\n                <Typography variant=\"body2\">{card.type}</Typography>\n              </Box>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Box className={styles.open}>\n                <img\n                  alt=\"This is a card\"\n                  src={card.imgSmall}\n                  className={styles.imgSmall}\n                ></img>\n                <Box className={styles.card_info}>\n                  <Typography variant=\"body2\">{card.text}</Typography>\n                  {card.flavorText ? (\n                    <Typography variant=\"body2\" className={styles.flavorText}>\n                      {card.flavorText}\n                    </Typography>\n                  ) : null}\n                </Box>\n              </Box>\n            </AccordionDetails>\n          </Accordion>\n        );\n      })}\n      <Typography variant=\"h4\">SideBoard</Typography>\n    </Box>\n  );\n};\n\nexport default DeckCards;\n","/home/james/Desktop/deckstars/client/src/components/MUI_custom/Custom_Accordion.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":2,"column":18,"nodeType":"105","messageId":"106","endLine":2,"endColumn":29},{"ruleId":"103","severity":1,"message":"107","line":16,"column":11,"nodeType":"105","messageId":"106","endLine":16,"endColumn":15},{"ruleId":"103","severity":1,"message":"108","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":19},{"ruleId":"103","severity":1,"message":"109","line":2,"column":28,"nodeType":"105","messageId":"106","endLine":2,"endColumn":38},{"ruleId":"103","severity":1,"message":"110","line":1,"column":29,"nodeType":"105","messageId":"106","endLine":1,"endColumn":38},{"ruleId":"103","severity":1,"message":"108","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":19},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'useParams' is defined but never used.","'useHistory' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]