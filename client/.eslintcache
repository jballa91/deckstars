[{"/home/james/Desktop/deckstars/client/src/index.js":"1","/home/james/Desktop/deckstars/client/src/App.js":"2","/home/james/Desktop/deckstars/client/src/components/SplashPage.js":"3","/home/james/Desktop/deckstars/client/src/services/auth.js":"4","/home/james/Desktop/deckstars/client/src/MainContext.js":"5","/home/james/Desktop/deckstars/client/src/theme/mui_theme.js":"6","/home/james/Desktop/deckstars/client/src/styles/navbarstyles.js":"7","/home/james/Desktop/deckstars/client/src/components/nav/NavBar.js":"8","/home/james/Desktop/deckstars/client/src/components/nav/NavLogin.js":"9","/home/james/Desktop/deckstars/client/src/components/nav/NavMenu.js":"10","/home/james/Desktop/deckstars/client/src/components/SignUpForm.js":"11","/home/james/Desktop/deckstars/client/src/components/HomePage.js":"12","/home/james/Desktop/deckstars/client/src/components/PrivateRoute.js":"13","/home/james/Desktop/deckstars/client/src/styles/homepagestyles.js":"14","/home/james/Desktop/deckstars/client/src/styles/signupformstyles.js":"15","/home/james/Desktop/deckstars/client/src/styles/navmenustyles.js":"16","/home/james/Desktop/deckstars/client/src/components/DeckDetails.js":"17","/home/james/Desktop/deckstars/client/src/components/DeckInfo.js":"18","/home/james/Desktop/deckstars/client/src/components/homepage/HomePageLeft.js":"19","/home/james/Desktop/deckstars/client/src/components/homepage/DeckCards.js":"20","/home/james/Desktop/deckstars/client/src/components/MUI_custom/Custom_Accordion.js":"21","/home/james/Desktop/deckstars/client/src/components/homepage/CardBrowser.js":"22","/home/james/Desktop/deckstars/client/src/components/homepage/DeckForm.js":"23","/home/james/Desktop/deckstars/client/src/services/buttons.js":"24","/home/james/Desktop/deckstars/client/src/styles/deckformstyles.js":"25","/home/james/Desktop/deckstars/client/src/styles/homepageleftstyles.js":"26","/home/james/Desktop/deckstars/client/src/styles/deckcardstyles.js":"27","/home/james/Desktop/deckstars/client/src/components/homepage/CardFilter.js":"28","/home/james/Desktop/deckstars/client/src/components/MUI_custom/Filters_Custom_Accordion.js":"29","/home/james/Desktop/deckstars/client/src/styles/cardbrowserstyles.js":"30","/home/james/Desktop/deckstars/client/src/components/deckcards/CustomDetails.js":"31","/home/james/Desktop/deckstars/client/src/components/homepage/DeckBrowser.js":"32","/home/james/Desktop/deckstars/client/src/styles/deckbrowserstyles.js":"33","/home/james/Desktop/deckstars/client/src/styles/deckdetailstyles.js":"34","/home/james/Desktop/deckstars/client/src/components/homepage/DeckFilter.js":"35","/home/james/Desktop/deckstars/client/src/styles/deckfilterstyles.js":"36"},{"size":305,"mtime":1611868324515,"results":"37","hashOfConfig":"38"},{"size":1322,"mtime":1612567050373,"results":"39","hashOfConfig":"38"},{"size":192,"mtime":1612290856265,"results":"40","hashOfConfig":"38"},{"size":1235,"mtime":1612284859382,"results":"41","hashOfConfig":"38"},{"size":2359,"mtime":1612550463066,"results":"42","hashOfConfig":"38"},{"size":742,"mtime":1611800004853,"results":"43","hashOfConfig":"38"},{"size":1684,"mtime":1612138576137,"results":"44","hashOfConfig":"38"},{"size":1179,"mtime":1611869813027,"results":"45","hashOfConfig":"38"},{"size":3366,"mtime":1612284850478,"results":"46","hashOfConfig":"38"},{"size":1591,"mtime":1612213092728,"results":"47","hashOfConfig":"38"},{"size":2933,"mtime":1612482647978,"results":"48","hashOfConfig":"38"},{"size":3536,"mtime":1612574928133,"results":"49","hashOfConfig":"38"},{"size":578,"mtime":1611861912966,"results":"50","hashOfConfig":"38"},{"size":1410,"mtime":1612492537526,"results":"51","hashOfConfig":"38"},{"size":641,"mtime":1612138048774,"results":"52","hashOfConfig":"38"},{"size":143,"mtime":1612138601960,"results":"53","hashOfConfig":"38"},{"size":2791,"mtime":1612567248993,"results":"54","hashOfConfig":"38"},{"size":2600,"mtime":1612556105458,"results":"55","hashOfConfig":"38"},{"size":4872,"mtime":1612567654092,"results":"56","hashOfConfig":"38"},{"size":6942,"mtime":1612483766383,"results":"57","hashOfConfig":"38"},{"size":1297,"mtime":1612299831470,"results":"58","hashOfConfig":"38"},{"size":6853,"mtime":1612562424017,"results":"59","hashOfConfig":"38"},{"size":11210,"mtime":1612583580155,"results":"60","hashOfConfig":"38"},{"size":1833,"mtime":1612562445764,"results":"61","hashOfConfig":"38"},{"size":1877,"mtime":1612583336497,"results":"62","hashOfConfig":"38"},{"size":1595,"mtime":1612289866230,"results":"63","hashOfConfig":"38"},{"size":2320,"mtime":1612492194938,"results":"64","hashOfConfig":"38"},{"size":7958,"mtime":1612575543689,"results":"65","hashOfConfig":"38"},{"size":1048,"mtime":1612299969961,"results":"66","hashOfConfig":"38"},{"size":2881,"mtime":1612559666821,"results":"67","hashOfConfig":"38"},{"size":13856,"mtime":1612492169407,"results":"68","hashOfConfig":"38"},{"size":3922,"mtime":1612577368840,"results":"69","hashOfConfig":"38"},{"size":1689,"mtime":1612565114023,"results":"70","hashOfConfig":"38"},{"size":562,"mtime":1612566492981,"results":"71","hashOfConfig":"38"},{"size":6634,"mtime":1612583385876,"results":"72","hashOfConfig":"38"},{"size":1486,"mtime":1612576570752,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1p0v3vd",{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"76"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"/home/james/Desktop/deckstars/client/src/index.js",[],["159","160"],"/home/james/Desktop/deckstars/client/src/App.js",["161","162","163","164","165"],"import { createBrowserHistory } from \"history\";\nimport React, { useEffect, useContext } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { SplashPage } from \"./components/SplashPage.js\";\nimport { MainContext } from \"./MainContext\";\n\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport NavBar from \"./components/nav/NavBar\";\nimport HomePage from \"./components/HomePage\";\n\nimport { Box, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nconst history = createBrowserHistory();\n\nconst useStyles = makeStyles((theme) => ({\n  window: {\n    width: \"100vw\",\n\n    height: \"100%\",\n    margin: \"0px\",\n    padding: \"0px\",\n  },\n  app: {},\n  slipbop: {\n    position: \"static\",\n    zIndex: 3,\n    width: \"100%\",\n  },\n}));\n\nfunction App() {\n  const { authenticated } = useContext(MainContext);\n  const { loading } = useContext(MainContext);\n\n  const styles = useStyles();\n\n  // useEffect(() => {}, [loading]);\n\n  if (loading) {\n    return <CircularProgress />;\n  }\n\n  return (\n    <Box className={styles.window}>\n      <BrowserRouter history={history}>\n        <header className={styles.slipbop}>\n          <NavBar />\n        </header>\n        <Route path=\"/\" component={HomePage} />\n      </BrowserRouter>\n    </Box>\n  );\n}\n\nexport default App;\n","/home/james/Desktop/deckstars/client/src/components/SplashPage.js",[],"/home/james/Desktop/deckstars/client/src/services/auth.js",[],"/home/james/Desktop/deckstars/client/src/MainContext.js",[],"/home/james/Desktop/deckstars/client/src/theme/mui_theme.js",[],"/home/james/Desktop/deckstars/client/src/styles/navbarstyles.js",[],"/home/james/Desktop/deckstars/client/src/components/nav/NavBar.js",[],"/home/james/Desktop/deckstars/client/src/components/nav/NavLogin.js",[],"/home/james/Desktop/deckstars/client/src/components/nav/NavMenu.js",[],"/home/james/Desktop/deckstars/client/src/components/SignUpForm.js",["166"],"import React, { useEffect, useState, useContext } from \"react\";\nimport { Box, Typography, Button, TextField } from \"@material-ui/core\";\nimport { MainContext } from \"../MainContext\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport signupformstyles from \"../styles/signupformstyles\";\n\nimport { signUp } from \"../services/auth\";\n\nconst useStyles = makeStyles((theme) => signupformstyles);\n\nconst SignUpForm = ({ setSignUpOpen }) => {\n  const { setAuthenticated, setLoading, setUser } = useContext(MainContext);\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [checkPassword, setCheckPassword] = useState(\"\");\n\n  const styles = useStyles();\n\n  useEffect(() => {}, []);\n\n  const changeUsername = (e) => {\n    e.preventDefault();\n    setUsername(e.target.value);\n  };\n\n  const changeEmail = (e) => {\n    e.preventDefault();\n    setEmail(e.target.value);\n  };\n\n  const changePassword = (e) => {\n    e.preventDefault();\n    setPassword(e.target.value);\n  };\n\n  const changeCheckPassword = (e) => {\n    e.preventDefault();\n    setCheckPassword(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (password === checkPassword) {\n      let user = await signUp(username, email, password);\n      if (user.message === \"Username or Email in use.\") {\n        window.alert(\"Username or Email in use.\");\n      } else {\n        setUser(user.user);\n        setAuthenticated(true);\n      }\n    } else {\n      window.alert(\"Passwords do not match\");\n    }\n  };\n\n  return (\n    <Box className={styles.form_container}>\n      <Typography variant=\"h2\" className={styles.form_title}>\n        Sign Up\n      </Typography>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <TextField\n          required\n          className={styles.form_field}\n          InputProps={{ className: styles.input }}\n          onChange={changeUsername}\n          placeholder=\"username\"\n          type=\"text\"\n          autoFocus={true}\n        ></TextField>\n        <TextField\n          required\n          className={styles.form_field}\n          InputProps={{ className: styles.input }}\n          onChange={changeEmail}\n          placeholder=\"email\"\n          type=\"text\"\n        ></TextField>\n        <TextField\n          required\n          className={styles.form_field}\n          InputProps={{ className: styles.input }}\n          onChange={changePassword}\n          placeholder=\"password\"\n          type=\"password\"\n        ></TextField>\n        <TextField\n          required\n          className={styles.form_field}\n          InputProps={{ className: styles.input }}\n          onChange={changeCheckPassword}\n          placeholder=\"confirm password\"\n          type=\"password\"\n        ></TextField>\n        <Button type=\"submit\">Sign up for an account</Button>\n      </form>\n    </Box>\n  );\n};\n\nexport default SignUpForm;\n","/home/james/Desktop/deckstars/client/src/components/HomePage.js",["167","168","169","170"],"import React, { useEffect, useContext } from \"react\";\nimport { Route, Switch, useLocation, useParams } from \"react-router-dom\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport HomePageLeft from \"./homepage/HomePageLeft\";\nimport DeckDetails from \"./DeckDetails\";\nimport DeckCards from \"./homepage/DeckCards\";\nimport CardBrowser from \"./homepage/CardBrowser\";\nimport DeckBrowser from \"./homepage/DeckBrowser\";\nimport DeckForm from \"./homepage/DeckForm\";\nimport CardFilter from \"./homepage/CardFilter\";\nimport DeckFilter from \"./homepage/DeckFilter\";\nimport { MainContext } from \"../MainContext\";\nimport { Box, Modal, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nimport homepagestyles from \"../styles/homepagestyles\";\n\nconst useStyles = makeStyles((theme) => homepagestyles);\n\nconst HomePage = () => {\n  const {\n    modalImgOpen,\n    modalImgSrc,\n    modalRulingsOpen,\n    rulings,\n    setModalImgOpen,\n    setModalImgSrc,\n    setModalRulingsOpen,\n    setRulings,\n  } = useContext(MainContext);\n  const styles = useStyles();\n\n  const handleImgClose = (e) => {\n    e.preventDefault();\n    setModalImgOpen(false);\n    setModalImgSrc([]);\n  };\n\n  const handleRulingsClose = (e) => {\n    e.preventDefault();\n    setModalRulingsOpen(false);\n    setRulings([]);\n  };\n\n  // useEffect(() => {}, []);\n\n  return (\n    <div className={styles.homepage_container}>\n      <Modal\n        open={modalImgOpen}\n        onClose={handleImgClose}\n        className={styles.modal}\n        aria-labelledby=\"Card Image\"\n        aria-describedby=\"This is an image of a selected card.\"\n      >\n        <Box className={styles.modal}>\n          {modalImgSrc.map((src, i) => {\n            return (\n              <img\n                className={styles.modal_img}\n                alt=\"A large version of selected card\"\n                src={src}\n                key={i}\n              ></img>\n            );\n          })}\n        </Box>\n      </Modal>\n      <Modal\n        open={modalRulingsOpen}\n        onClose={handleRulingsClose}\n        className={styles.modal_ruling}\n        aria-labelledby=\"Rulings\"\n        aria-describedby=\"This is a set of rulings for a card.\"\n      >\n        <Box className={styles.modal_ruling_box}>\n          {rulings.map((ruling, i) => {\n            return (\n              <Box className={styles.ruling}>\n                <Typography variant=\"Body2\">{ruling.date}</Typography>\n                <Typography variant=\"caption\">{ruling.text}</Typography>\n              </Box>\n            );\n          })}\n        </Box>\n      </Modal>\n      <Box className={styles.homepage_top}>\n        <Switch>\n          <Route exact path=\"/decks\" component={DeckFilter} />\n          <Route exact path=\"/\" component={CardFilter} />\n        </Switch>\n      </Box>\n      <Box className={styles.homepage_bottom}>\n        <HomePageLeft className={styles.homepage_left} />\n        <Box className={styles.homepage_center}>\n          <Switch>\n            <Route exact path=\"/deck/:deckId\" component={DeckCards} />\n            <Route exact path=\"/decks\" component={DeckBrowser} />\n            <Route path=\"/\" component={CardBrowser} />\n          </Switch>\n        </Box>\n        <Box className={styles.homepage_right}>\n          <Switch>\n            <Route exact path=\"/deck/:deckId\" component={DeckDetails} />\n            <Route exact path=\"/decks\" component={DeckDetails} />\n            <Route path=\"/\" component={DeckForm} />\n          </Switch>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default HomePage;\n","/home/james/Desktop/deckstars/client/src/components/PrivateRoute.js",[],"/home/james/Desktop/deckstars/client/src/styles/homepagestyles.js",[],"/home/james/Desktop/deckstars/client/src/styles/signupformstyles.js",[],"/home/james/Desktop/deckstars/client/src/styles/navmenustyles.js",[],"/home/james/Desktop/deckstars/client/src/components/DeckDetails.js",["171"],"import React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { MainContext } from \"../MainContext\";\n\nimport deckdetailstyles from \"../styles/deckdetailstyles\";\n\nconst useStyles = makeStyles((theme) => deckdetailstyles);\n\nconst DeckDetails = () => {\n  const { user, currentDeck, setIsEdit, setNewDeck } = useContext(MainContext);\n  const history = useHistory();\n\n  const styles = useStyles();\n\n  const handleEdit = (e) => {\n    // e.preventDefault();\n    let tempDeck = {\n      id: currentDeck.id,\n      name: currentDeck.name,\n      description: currentDeck.description,\n      mainDeck: [\n        ...currentDeck.mainDeck.map((slot) => {\n          return {\n            id: slot.card.id,\n            quantity: slot.quantity,\n            name: slot.card.name,\n          };\n        }),\n      ],\n      sideBoard: [\n        ...currentDeck.sideBoard.map((slot) => {\n          return {\n            id: slot.card.id,\n            quantity: slot.quantity,\n            name: slot.card.name,\n          };\n        }),\n      ],\n    };\n    setNewDeck(tempDeck);\n    setIsEdit(true);\n    history.push(\"/\");\n  };\n\n  const handleVisit = (e) => {\n    history.push(`/deck/${currentDeck.id}`);\n  };\n\n  if (!currentDeck) {\n    return null;\n  }\n\n  return (\n    <Box className={styles.deck_details_container}>\n      <img\n        src={currentDeck.imgUrl}\n        alt=\"Deck\"\n        className={styles.deck_img}\n      ></img>\n      <Box className={styles.name_and_edit_button_container}>\n        <Typography variant=\"h5\">{currentDeck.name}</Typography>\n        {user && currentDeck.userId === user.id ? (\n          <Button className={styles.edit_button} onClick={(e) => handleEdit(e)}>\n            Edit\n          </Button>\n        ) : (\n          <Button\n            className={styles.edit_button}\n            onClick={(e) => handleVisit(e)}\n          >\n            View Deck\n          </Button>\n        )}\n      </Box>\n      <Typography variant=\"body2\">\n        Created By: {currentDeck.user.username}\n      </Typography>\n      <Typography variant=\"body2\">Format: {currentDeck.format}</Typography>\n      <Box className={styles.deck_record}>\n        <Typography variant=\"caption\">Wins: {currentDeck.wins}</Typography>\n        <Typography variant=\"caption\">Losses: {currentDeck.losses}</Typography>\n        <Typography variant=\"caption\">\n          Winrate:{\" \"}\n          {currentDeck.wins\n            ? currentDeck.wins / (currentDeck.wins + currentDeck.losses)\n            : 0}\n        </Typography>\n      </Box>\n      <Box>\n        <Typography variant=\"body1\">{currentDeck.description}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default DeckDetails;\n","/home/james/Desktop/deckstars/client/src/components/DeckInfo.js",["172","173"],"import React, { useContext } from \"react\";\nimport { Link, withRouter, useHistory } from \"react-router-dom\";\nimport { Box, Typography, IconButton } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nimport { MainContext } from \"../MainContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    textDecoration: \"none\",\n    color: \"white\",\n  },\n  deckinfo_container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    backgroundColor: theme.palette.secondary.light,\n    height: \"80px\",\n    maxWidth: \"100%\",\n    marginBottom: \"5px\",\n    padding: \"10px\",\n  },\n  row_one: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    margin: \"5px\",\n  },\n  row_two: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    margin: \"5px\",\n  },\n}));\n\nconst DeckInfo = ({ deck, setDeleteOpen, setDeckToDelete }) => {\n  const { setCurrentDeck, setFilters } = useContext(MainContext);\n  const styles = useStyles();\n  const handleClick = async (e) => {\n    let foundDeck = await fetch(`/api/decks/${deck.id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const parsedDeck = await foundDeck.json();\n    setFilters({\n      name: \"\",\n      colors: [],\n      cardTypes: [],\n    });\n    setCurrentDeck(parsedDeck);\n  };\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    setDeckToDelete(deck.id);\n    setDeleteOpen(true);\n  };\n\n  return (\n    <Link\n      to={`/deck/${deck.id}`}\n      key={deck.id}\n      className={styles.link}\n      onClick={(e) => handleClick(e)}\n    >\n      <Box className={styles.deckinfo_container}>\n        <Box className={styles.row_one}>\n          <Typography>{deck.name}</Typography>\n          <Typography>{deck.format}</Typography>\n        </Box>\n        <Box className={styles.row_two}>\n          <Typography variant=\"body2\">Wins: {deck.wins}</Typography>\n          <Typography variant=\"body2\">Losses: {deck.losses}</Typography>\n          <Typography variant=\"body2\">\n            Winrate: {deck.wins ? deck.wins / (deck.wins + deck.losses) : 0}\n          </Typography>\n        </Box>\n        <Box className={styles.delete_holder}>\n          <IconButton onClick={(e) => handleDelete(e)} size=\"small\">\n            <DeleteIcon color=\"error\" fontSize=\"small\" id={deck.id} />\n            <Typography variant=\"caption\" color=\"error\">\n              Delete Deck\n            </Typography>\n          </IconButton>\n        </Box>\n      </Box>\n    </Link>\n  );\n};\n\nexport default withRouter(DeckInfo);\n","/home/james/Desktop/deckstars/client/src/components/homepage/HomePageLeft.js",["174"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { MainContext } from \"../../MainContext\";\nimport {\n  Box,\n  Button,\n  Typography,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Modal,\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport homepageleftstyles from \"../../styles/homepageleftstyles\";\nimport DeckInfo from \"../DeckInfo\";\n\nconst useStyles = makeStyles((theme) => homepageleftstyles);\n\nconst HomePageLeft = () => {\n  const { user, setIsEdit, setNewDeck, setUser } = useContext(MainContext);\n  const [deleteOpen, setDeleteOpen] = useState(false);\n  const [deckToDelete, setDeckToDelete] = useState(null);\n  const styles = useStyles();\n\n  const history = useHistory();\n\n  useEffect(() => {}, [user]);\n\n  const handleClose = (e) => {\n    setDeleteOpen(false);\n  };\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    setDeleteOpen(false);\n  };\n\n  const handleCreateDeckClick = (e) => {\n    e.preventDefault();\n    setNewDeck({\n      name: \"\",\n      description: \"\",\n      mainDeck: [],\n      sideBoard: [],\n    });\n    setIsEdit(false);\n    history.push(\"/\");\n  };\n\n  const handleDeckBrowseClick = (e) => {\n    e.preventDefault();\n    history.push(\"/decks\");\n  };\n  const handleDeckDelete = async (e) => {\n    e.preventDefault();\n    await fetch(`/api/decks/${deckToDelete}`, {\n      method: \"DELETE\",\n      \"Content-Type\": \"application/json\",\n      credentials: \"include\",\n    });\n    // const parsed = await res.json();\n    const newDecks = user.decks.filter((deck) => deck.id !== deckToDelete);\n    const tempUser = { ...user };\n    tempUser.decks = newDecks;\n    setUser(tempUser);\n    setDeckToDelete(0);\n    setDeleteOpen(false);\n    setNewDeck({\n      name: \"\",\n      description: \"\",\n      mainDeck: [],\n      sideBoard: [],\n    });\n    history.push(\"/\");\n  };\n  return (\n    <Box className={styles.homepage_left}>\n      <Modal\n        open={deleteOpen}\n        onClose={handleClose}\n        className={styles.modal}\n        aria-labelledby=\"Delete Deck\"\n        aria-describedby=\"This is asking you if you're sure you want to delete a deck.\"\n      >\n        <Box className={styles.modal_box}>\n          <Typography>Are you sure you want to delete this deck?</Typography>\n          <Button\n            className={styles.confirm_delete}\n            onClick={(e) => handleDeckDelete(e)}\n          >\n            Confirm\n          </Button>\n          <Button\n            className={styles.cancel_delete}\n            onClick={(e) => handleClick(e)}\n          >\n            Cancel\n          </Button>\n        </Box>\n      </Modal>\n      <Box className={styles.fixed}>\n        {user && (\n          <>\n            <Accordion square={true} className={styles.accordion}>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon color=\"primary\" />}\n                aria-controls=\"created decks\"\n              >\n                <Typography>Created Decks</Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <Box className={styles.accordion_expanded}>\n                  {user &&\n                    user.decks.map((deck) => (\n                      <DeckInfo\n                        key={deck.id}\n                        deck={deck}\n                        setDeleteOpen={setDeleteOpen}\n                        setDeckToDelete={setDeckToDelete}\n                      />\n                    ))}\n                </Box>\n              </AccordionDetails>\n            </Accordion>\n            <Accordion square={true} className={styles.accordion}>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon color=\"primary\" />}\n                aria-controls=\"liked decks\"\n              >\n                <Typography>Liked Decks</Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <Box className={styles.accordion_expanded}>\n                  {user &&\n                    user.deckLikes.map((deck) => (\n                      <DeckInfo\n                        key={deck.id}\n                        deck={deck}\n                        setDeleteOpen={setDeleteOpen}\n                        setDeckToDelete={setDeckToDelete}\n                      />\n                    ))}\n                </Box>\n              </AccordionDetails>\n            </Accordion>\n          </>\n        )}\n        <Button\n          className={styles.button_new_deck}\n          onClick={(e) => handleCreateDeckClick(e)}\n        >\n          Create a new deck\n        </Button>\n        <Button\n          className={styles.button_new_deck}\n          onClick={(e) => handleDeckBrowseClick(e)}\n        >\n          Browse Decks\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default HomePageLeft;\n","/home/james/Desktop/deckstars/client/src/components/homepage/DeckCards.js",[],"/home/james/Desktop/deckstars/client/src/components/MUI_custom/Custom_Accordion.js",[],"/home/james/Desktop/deckstars/client/src/components/homepage/CardBrowser.js",["175"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport { MainContext } from \"../../MainContext\";\n\nimport {\n  handleRemoveCardMain,\n  handleAddCardMain,\n  handleRemoveCardSide,\n  handleAddCardSide,\n} from \"../../services/buttons\";\n\nimport cardbrowserstyles from \"../../styles/cardbrowserstyles\";\n\nconst useStyles = makeStyles((theme) => cardbrowserstyles);\n\nconst CardBrowser = () => {\n  const {\n    cards,\n    filters,\n    newDeck,\n    page,\n    setCards,\n    setFilters,\n    setPage,\n    setModalImgOpen,\n    setModalImgSrc,\n    setNewDeck,\n  } = useContext(MainContext);\n  // const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const styles = useStyles();\n\n  const sortCards = (a, b) => {\n    let layoutA = a.layout.toLowerCase();\n    let layoutB = b.layout.toLowerCase();\n\n    if (layoutA < layoutB) {\n      return 1;\n    }\n    if (layoutA > layoutB) {\n      return -1;\n    }\n    return 0;\n  };\n\n  const temp = [];\n\n  let filterDups = (obj) => {\n    if (obj.layout === \"normal\") {\n      return true;\n    }\n    if (temp.indexOf(obj.uuid) !== -1) {\n      return false;\n    } else {\n      temp.push(obj.uuid, obj.otherFaceId);\n      return true;\n    }\n  };\n\n  const handleImgClick = (e) => {\n    if (e.target.getAttribute(\"layout\") === \"modal_dfc\") {\n      setModalImgSrc([e.target.src, e.target.getAttribute(\"backImg\")]);\n    } else {\n      setModalImgSrc([e.target.src]);\n    }\n    setModalImgOpen(true);\n  };\n\n  const handleClickPrevPage = (e) => {\n    setPage(page - 1);\n  };\n\n  const handleClickNextPage = (e) => {\n    setPage(page + 1);\n  };\n\n  useEffect(() => {\n    setLoading(false);\n    (async () => {\n      // if (!cards.length && !filters) {\n      //   const res = await fetch(`/api/cards/page/${page}`);\n      //   const foundCards = await res.json();\n      //   setCards(foundCards);\n      //   setLoading(false);\n      // } else {\n      let queryString = \"?\";\n\n      if (filters.name) {\n        queryString += `name=${filters.name}&`;\n      }\n\n      if (filters.colors.length > 0) {\n        for (let i = 0; i < filters.colors.length; i++) {\n          queryString += `colors[]=${filters.colors[i]}&`;\n        }\n      }\n\n      if (filters.cardTypes.length > 0) {\n        for (let i = 0; i < filters.cardTypes.length; i++) {\n          queryString += `cardTypes[]=${filters.cardTypes[i]}&`;\n        }\n      }\n\n      queryString += `page=${page}&`;\n\n      let res = await fetch(`api/cards/search/results${queryString}`);\n      let parsed = await res.json();\n      setCards(parsed);\n      // }\n    })();\n  }, [page, filters, setCards, cards.length]);\n\n  if (loading) {\n    return <h1 style={{ color: \"white\" }}>Loading....</h1>;\n  }\n\n  return (\n    <Box className={styles.container}>\n      <Box className={styles.page_header}>\n        <Box className={styles.page_changer}>\n          <Button\n            disabled={page <= 0}\n            onClick={(e) => handleClickPrevPage(e, newDeck, setNewDeck)}\n            className={styles.button_previous_page}\n          >\n            Prev\n          </Button>\n          <Typography className={styles.current_page}>{page + 1}</Typography>\n          <Button\n            disabled={cards.length < 20}\n            className={styles.button_next_page}\n            onClick={(e) => handleClickNextPage(e, newDeck, setNewDeck)}\n          >\n            Next\n          </Button>\n        </Box>\n      </Box>\n      <Box className={styles.card_browser}>\n        {cards\n          .filter(filterDups)\n          .sort(sortCards)\n          .map((card) => {\n            return (\n              <Box className={styles.card_panel} key={card.uuid}>\n                <img\n                  src={card.imgLarge}\n                  alt={card.name}\n                  className={styles.card_img}\n                  layout={card.layout}\n                  backImg={card.backImgLarge}\n                  onClick={(e) => handleImgClick(e)}\n                ></img>\n                <Box className={styles.card_panel_interact}>\n                  <Box className={styles.card_panel_interact_main}>\n                    <Typography\n                      className={styles.card_panel_interact_header}\n                      variant=\"body2\"\n                    >\n                      Main Deck\n                    </Typography>\n                    <button\n                      className={styles.interact_button}\n                      id={`${card.id}@${card.name}`}\n                      onClick={(e) =>\n                        handleRemoveCardMain(e, newDeck, setNewDeck)\n                      }\n                    >\n                      -1\n                    </button>\n                    <button\n                      artcrop={card.artCrop}\n                      className={styles.interact_button}\n                      id={`${card.id}@${card.name}`}\n                      onClick={(e) => handleAddCardMain(e, newDeck, setNewDeck)}\n                    >\n                      +1\n                    </button>\n                  </Box>\n                  <Box className={styles.card_panel_interact_main}>\n                    <Typography\n                      className={styles.card_panel_interact_header}\n                      variant=\"body2\"\n                    >\n                      Side Board\n                    </Typography>\n                    <button\n                      className={styles.interact_button}\n                      id={`${card.id}@${card.name}`}\n                      onClick={(e) =>\n                        handleRemoveCardSide(e, newDeck, setNewDeck)\n                      }\n                    >\n                      -1\n                    </button>\n                    <button\n                      artcrop={card.artCrop}\n                      className={styles.interact_button}\n                      id={`${card.id}@${card.name}`}\n                      onClick={(e) => handleAddCardSide(e, newDeck, setNewDeck)}\n                    >\n                      +1\n                    </button>\n                  </Box>\n                </Box>\n              </Box>\n            );\n          })}\n      </Box>\n      <Box className={styles.page_footer}>\n        <Box className={styles.page_changer}>\n          <Button\n            disabled={page <= 0}\n            onClick={(e) => handleClickPrevPage(e)}\n            className={styles.button_previous_page}\n          >\n            Prev\n          </Button>\n          <Typography className={styles.current_page}>{page + 1}</Typography>\n          <Button\n            disabled={cards.length < 20}\n            className={styles.button_next_page}\n            onClick={(e) => handleClickNextPage(e)}\n          >\n            Next\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default CardBrowser;\n","/home/james/Desktop/deckstars/client/src/components/homepage/DeckForm.js",["176","177","178","179","180","181","182","183","184","185"],"/home/james/Desktop/deckstars/client/src/services/buttons.js",["186","187"],"import React, { useContext } from \"react\";\n\nexport const handleRemoveCardMain = (e, newDeck, f) => {\n  e.preventDefault();\n  let idName = e.target.id.split(\"@\");\n  let tempDeck = { ...newDeck };\n  tempDeck.mainDeck.forEach((card, i) => {\n    if (card.id === parseInt(idName[0])) {\n      card.quantity -= 1;\n    }\n  });\n  let newMainDeck = tempDeck.mainDeck.filter((card) => card.quantity > 0);\n  tempDeck.mainDeck = newMainDeck;\n  f(tempDeck);\n};\n\nexport const handleAddCardMain = (e, newDeck, f) => {\n  e.preventDefault();\n  let idName = e.target.id.split(\"@\");\n  const tempDeck = { ...newDeck };\n  let found = false;\n  tempDeck.mainDeck.forEach((card, i) => {\n    if (card.id === parseInt(idName[0])) {\n      card.quantity += 1;\n      found = true;\n    }\n  });\n  if (!found) {\n    tempDeck.mainDeck.push({\n      id: parseInt(idName[0]),\n      name: idName[1],\n      quantity: 1,\n      artCrop: e.target.getAttribute(\"artcrop\"),\n    });\n  }\n  f(tempDeck);\n};\n\nexport const handleRemoveCardSide = (e, newDeck, f) => {\n  e.preventDefault();\n  let idName = e.target.id.split(\"@\");\n  let tempDeck = { ...newDeck };\n  tempDeck.sideBoard.forEach((card, i) => {\n    if (card.id === parseInt(idName[0])) {\n      card.quantity -= 1;\n    }\n  });\n  let newMainDeck = tempDeck.sideBoard.filter((card) => card.quantity > 0);\n  tempDeck.sideBoard = newMainDeck;\n  f(tempDeck);\n};\n\nexport const handleAddCardSide = (e, newDeck, f) => {\n  e.preventDefault();\n  let idName = e.target.id.split(\"@\");\n  const tempDeck = { ...newDeck };\n  let found = false;\n  tempDeck.sideBoard.forEach((card, i) => {\n    if (card.id === parseInt(idName[0])) {\n      card.quantity += 1;\n      found = true;\n    }\n  });\n  if (!found) {\n    tempDeck.sideBoard.push({\n      id: parseInt(idName[0]),\n      name: idName[1],\n      quantity: 1,\n    });\n  }\n  f(tempDeck);\n};\n","/home/james/Desktop/deckstars/client/src/styles/deckformstyles.js",[],"/home/james/Desktop/deckstars/client/src/styles/homepageleftstyles.js",[],"/home/james/Desktop/deckstars/client/src/styles/deckcardstyles.js",[],"/home/james/Desktop/deckstars/client/src/components/homepage/CardFilter.js",["188","189","190"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { MainContext } from \"../../MainContext\";\nimport {\n  Box,\n  Typograhpy,\n  Typography,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  FormControlLabel,\n  FormHelperText,\n  Checkbox,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from \"../MUI_custom/Filters_Custom_Accordion\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: \"100%\",\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"70%\",\n    height: \"100%\",\n    display: \"grid\",\n    gridTemplateColumns: \"6fr 1fr 8fr 1fr 2fr\",\n  },\n  search_container: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  text_field: {\n    backgroundColor: theme.palette.secondary.light,\n  },\n  filters_container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    color: \"white\",\n  },\n  filters: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"56px\",\n    width: \"100%\",\n  },\n  accordion: {\n    height: \"100%\",\n    width: \"100%\",\n    zIndex: 3,\n    backgroundColor: theme.palette.secondary.light,\n    color: \"white\",\n    // border: \"1px solid white\",\n  },\n  accordion_summary: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    border: \"1px solid white\",\n    boxSizing: \"border-box\",\n  },\n  expanded_details: {\n    backgroundColor: theme.palette.secondary.main,\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  card_type_filters: {\n    display: \"flex\",\n  },\n  submit_container: {\n    display: \"flex\",\n    height: \"100%\",\n    alignItems: \"center\",\n  },\n  button_submit: {\n    backgroundColor: theme.palette.primary.main,\n    height: \"50px\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.light,\n    },\n  },\n  types_container: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr\",\n  },\n  check_box_container: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  check_box: {\n    color: theme.palette.secondary.light,\n  },\n  colors_container: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: \"0px 20px 0px 0px\",\n  },\n  mana_symbol: {\n    height: \"2rem\",\n    width: \"auto\",\n  },\n}));\n\nconst CardFilter = () => {\n  const { symbols, setFilters, setPage } = useContext(MainContext);\n  const [searchString, setSearchString] = useState(\"\");\n  const [cardTypes, setCardTypes] = useState([]);\n  const [checkedTypes, setCheckedTypes] = useState([]);\n  const [checkedColors, setCheckedColors] = useState([]);\n\n  const styles = useStyles();\n\n  const colors = [\n    { identifier: \"W\", symbol: \"{W}\" },\n    { identifier: \"U\", symbol: \"{U}\" },\n    { identifier: \"B\", symbol: \"{B}\" },\n    { identifier: \"R\", symbol: \"{R}\" },\n    { identifier: \"G\", symbol: \"{G}\" },\n    { identifier: \"C\", symbol: \"{C}\" },\n  ];\n\n  useEffect(() => {\n    (async () => {\n      const res = await fetch(\"/api/cardtypes\");\n      const parsed = await res.json();\n      setCardTypes(parsed);\n    })();\n  }, []);\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setSearchString(e.target.value);\n  };\n\n  const handleChangeTypeCheck = (e) => {\n    if (checkedTypes.includes(e.target.name)) {\n      setCheckedTypes([\n        ...checkedTypes.filter((name) => name !== e.target.name),\n      ]);\n    } else {\n      setCheckedTypes([...checkedTypes, e.target.name]);\n    }\n  };\n\n  const handleChangeColorCheck = (e) => {\n    if (checkedColors.includes(e.target.name)) {\n      setCheckedColors([\n        ...checkedColors.filter((name) => name !== e.target.name),\n      ]);\n    } else {\n      setCheckedColors([...checkedColors, e.target.name]);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setPage(0);\n    const queryObj = {\n      name: \"\",\n      colors: [],\n      cardTypes: [],\n    };\n\n    if (searchString) {\n      queryObj[\"name\"] = searchString;\n    }\n\n    if (checkedColors.length > 0) {\n      queryObj[\"colors\"] = checkedColors;\n    }\n\n    if (checkedTypes.length > 0) {\n      queryObj[\"cardTypes\"] = checkedTypes;\n    }\n    setFilters(queryObj);\n\n    // const res = await fetch(`/api/cards/search/results${queryString}`);\n    // // const parsed = await res.json();\n    // // setCards(parsed);\n    // let parsed = await res.json();\n    // setCards(parsed);\n  };\n\n  return (\n    <Box className={styles.container}>\n      <form className={styles.form} onSubmit={(e) => handleSubmit(e)}>\n        <Box className={styles.search_container}>\n          <TextField\n            className={styles.text_field}\n            variant=\"outlined\"\n            placeholder=\"Search for a card\"\n            onChange={(e) => handleChange(e)}\n            fullWidth={true}\n          ></TextField>\n        </Box>\n        <Box></Box>\n        <Box className={styles.filters_container}>\n          <Box className={styles.filters}>\n            <Accordion className={styles.accordion}>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon color=\"primary\" />}\n                aria-controls=\"expand filters\"\n                className={styles.accordion_summary}\n              >\n                <Typography>Filters</Typography>\n              </AccordionSummary>\n              <AccordionDetails className={styles.expanded_details}>\n                <FormControl\n                  component=\"fieldset\"\n                  className={styles.card_type_filters}\n                >\n                  <FormLabel component=\"legend\">Card Types</FormLabel>\n                  <FormGroup row={true} className={styles.types_container}>\n                    {cardTypes.map((type, i) => {\n                      return (\n                        <Box className={styles.check_box_container} key={i}>\n                          <Checkbox\n                            color=\"primary\"\n                            checked={checkedTypes.includes(type.name)}\n                            onChange={handleChangeTypeCheck}\n                            name={type.name}\n                            className={styles.check_box}\n                          />\n                          <Typography variant=\"caption\">{type.name}</Typography>\n                        </Box>\n                      );\n                    })}\n                  </FormGroup>\n                </FormControl>\n                <FormControl\n                  component=\"fieldset\"\n                  className={styles.color_filters}\n                >\n                  <FormLabel component=\"legend\">Colors</FormLabel>\n                  <FormGroup row={true} className={styles.colors_container}>\n                    {colors.map((color, i) => {\n                      return (\n                        <Box className={styles.check_box_container} key={i}>\n                          <Checkbox\n                            color=\"primary\"\n                            checked={checkedColors.includes(color.identifier)}\n                            onChange={handleChangeColorCheck}\n                            name={color.identifier}\n                            className={styles.check_box}\n                          />\n                          <img\n                            alt={`${color.identifier} mana symbol`}\n                            src={symbols[color.symbol]}\n                            className={styles.mana_symbol}\n                          ></img>\n                        </Box>\n                      );\n                    })}\n                  </FormGroup>\n                </FormControl>\n              </AccordionDetails>\n            </Accordion>\n          </Box>\n        </Box>\n        <Box></Box>\n        <Box className={styles.submit_container}>\n          <Button className={styles.button_submit} type=\"submit\">\n            Search\n          </Button>\n        </Box>\n      </form>\n    </Box>\n  );\n};\n\nexport default CardFilter;\n","/home/james/Desktop/deckstars/client/src/components/MUI_custom/Filters_Custom_Accordion.js",[],"/home/james/Desktop/deckstars/client/src/styles/cardbrowserstyles.js",[],"/home/james/Desktop/deckstars/client/src/components/deckcards/CustomDetails.js",[],["191","192"],"/home/james/Desktop/deckstars/client/src/components/homepage/DeckBrowser.js",["193","194","195"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport { MainContext } from \"../../MainContext\";\nimport deckbrowserstyles from \"../../styles/deckbrowserstyles\";\n\nconst useStyles = makeStyles((theme) => deckbrowserstyles);\n\nconst DeckBrowser = () => {\n  const { filters, page, setCurrentDeck, setFilters, setPage } = useContext(\n    MainContext\n  );\n  const [decks, setDecks] = useState([]);\n  const history = useHistory();\n\n  const styles = useStyles();\n\n  useEffect(() => {\n    (async () => {\n      let queryString = \"?\";\n\n      if (filters.name) {\n        queryString += `name=${filters.name}&`;\n      }\n\n      if (filters.cards) {\n        filters.cards.forEach((card) => {\n          queryString += `colors[]=${card}&`;\n        });\n      }\n\n      if (filters.colors.length > 0) {\n        filters.colors.forEach((color) => {\n          queryString += `colors[]=${color}&`;\n        });\n      }\n\n      if (filters.deckStrat) {\n        queryString += `strat=${filters.deckStrat}&`;\n      }\n\n      queryString += `page=${page}&`;\n      let res = await fetch(`api/decks/search/results${queryString}`);\n      let parsed = await res.json();\n      setDecks(parsed);\n    })();\n    setCurrentDeck(null);\n  }, []);\n\n  const handleClickPrevPage = (e) => {\n    setPage(page - 1);\n  };\n\n  const handleClickNextPage = (e) => {\n    setPage(page + 1);\n  };\n\n  const handleDeckClick = async (e, deckId) => {\n    e.preventDefault();\n    let foundDeck = await fetch(`/api/decks/${deckId}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const parsedDeck = await foundDeck.json();\n    setFilters({\n      name: \"\",\n      colors: [],\n      cardTypes: [],\n    });\n    setCurrentDeck(parsedDeck);\n  };\n\n  return (\n    <Box className={styles.container}>\n      <Box className={styles.page_header}>\n        <Box className={styles.page_changer}>\n          <Button\n            disabled={page <= 0}\n            onClick={(e) => handleClickPrevPage(e)}\n            className={styles.button_previous_page}\n          >\n            Prev\n          </Button>\n          <Typography className={styles.current_page}>{page}</Typography>\n          <Button\n            disabled={decks.length < 20}\n            className={styles.button_next_page}\n            onClick={(e) => handleClickNextPage(e)}\n          >\n            Next\n          </Button>\n        </Box>\n      </Box>\n      <Box className={styles.deck_browser}>\n        {decks.map((deck) => {\n          return (\n            <Box key={deck.id} id={deck.id} className={styles.deck_panel}>\n              <img\n                src={deck.imgUrl}\n                alt={deck.name}\n                className={styles.deck_img}\n                onClick={(e) => handleDeckClick(e, deck.id)}\n              ></img>\n              <Typography className={styles.deck_panel__text} variant=\"h6\">\n                {deck.name}\n              </Typography>\n              <Typography className={styles.deck_panel__text} variant=\"body2\">\n                Creator: {deck.user.username}\n              </Typography>\n            </Box>\n          );\n        })}\n      </Box>\n      <Box className={styles.page_footer}>\n        <Box className={styles.page_changer}>\n          <Button\n            disabled={page <= 0}\n            onClick={(e) => handleClickPrevPage(e)}\n            className={styles.button_previous_page}\n          >\n            Prev\n          </Button>\n          <Typography className={styles.current_page}>{page}</Typography>\n          <Button\n            disabled={decks.length < 20}\n            className={styles.button_next_page}\n            onClick={(e) => handleClickNextPage(e)}\n          >\n            Next\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default DeckBrowser;\n","/home/james/Desktop/deckstars/client/src/styles/deckbrowserstyles.js",[],"/home/james/Desktop/deckstars/client/src/styles/deckdetailstyles.js",[],"/home/james/Desktop/deckstars/client/src/components/homepage/DeckFilter.js",["196","197"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { MainContext } from \"../../MainContext\";\nimport {\n  Box,\n  Typography,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  CheckBox,\n  TextField,\n  Button,\n  Checkbox,\n} from \"@material-ui/core\";\n\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from \"../MUI_custom/Filters_Custom_Accordion\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nimport { makeStyles } from \"@material-ui/styles\";\n\nimport deckfilterstyles from \"../../styles/deckfilterstyles\";\n\nconst useStyles = makeStyles((theme) => deckfilterstyles);\n\nconst DeckFilter = () => {\n  const { symbols, setFilters, setPage } = useContext(MainContext);\n  const [searchDeckName, setSearchDeckName] = useState(\"\");\n  const [searchCardNames, setSearchCardNames] = useState(\"\");\n  const [checkedColors, setCheckedColors] = useState([]);\n  const [checkedStrat, setCheckedStrat] = useState(\"\");\n\n  const styles = useStyles();\n\n  const colors = [\n    { identifier: \"W\", symbol: \"{W}\" },\n    { identifier: \"U\", symbol: \"{U}\" },\n    { identifier: \"B\", symbol: \"{B}\" },\n    { identifier: \"R\", symbol: \"{R}\" },\n    { identifier: \"G\", symbol: \"{G}\" },\n    { identifier: \"C\", symbol: \"{C}\" },\n  ];\n\n  const handleNameSearchChange = (e) => {\n    e.preventDefault();\n    setSearchDeckName(e.target.value);\n  };\n\n  const handleChangeSearchCardNames = (e) => {\n    e.preventDefault();\n    setSearchCardNames(e.target.value);\n  };\n\n  const handleChangeColorCheck = (e) => {\n    if (checkedColors.includes(e.target.name)) {\n      setCheckedColors([\n        ...checkedColors.filter((name) => name !== e.target.name),\n      ]);\n    } else {\n      setCheckedColors([...checkedColors, e.target.name]);\n    }\n  };\n\n  const handleChangeStratCheck = (e) => {\n    if (checkedStrat === e.target.name) {\n      setCheckedStrat(\"\");\n    } else {\n      setCheckedStrat(e.target.name);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setPage(0);\n    const queryObj = {\n      name: \"\",\n      deckStrat: \"\",\n      cards: [],\n      checkedColors: [],\n    };\n\n    if (searchDeckName) {\n      queryObj[\"name\"] = searchDeckName;\n    }\n    if (searchCardNames) {\n      queryObj[\"cards\"] = searchCardNames.split(\"@\");\n    }\n    if (checkedStrat) {\n      queryObj[\"deckStrat\"] = checkedStrat;\n    }\n    if (checkedColors.length > 0) {\n      queryObj[\"colors\"] = checkedColors;\n    }\n    setFilters(queryObj);\n  };\n\n  return (\n    <Box className={styles.container}>\n      <form className={styles.form} onSubmit={(e) => handleSubmit(e)}>\n        <Box className={styles.search_container}>\n          <TextField\n            size=\"small\"\n            className={styles.text_field_deck_name}\n            variant=\"outlined\"\n            placeholder=\"Search deck names\"\n            onChange={(e) => handleNameSearchChange(e)}\n            fullWidth={true}\n          ></TextField>\n        </Box>\n        <Box></Box>\n        <Box className={styles.search_container}>\n          <TextField\n            size=\"small\"\n            className={styles.text_field_card_names}\n            variant=\"outlined\"\n            placeholder=\"Search card names (separate with @)\"\n            multiline={true}\n            onChange={(e) => handleChangeSearchCardNames(e)}\n            fullWidth={true}\n          ></TextField>\n        </Box>\n        <Box></Box>\n        <Box className={styles.filters_container}>\n          <Box className={styles.filters}>\n            <Accordion className={styles.accordion}>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon color=\"primary\" />}\n                aria-controls=\"expand filters\"\n                className={styles.accordion_summary}\n              >\n                <Typography>Filters</Typography>\n              </AccordionSummary>\n              <AccordionDetails className={styles.expanded_details}>\n                <FormControl\n                  component=\"fieldset\"\n                  className={styles.colors_filters}\n                >\n                  <FormLabel component=\"legend\">Colors</FormLabel>\n                  <FormGroup row={true} className={styles.colors_container}>\n                    {colors.map((color, i) => {\n                      return (\n                        <Box className={styles.check_box_container} key={i}>\n                          <Checkbox\n                            color=\"primary\"\n                            checked={checkedColors.includes(color.identifier)}\n                            onChange={handleChangeColorCheck}\n                            name={color.identifier}\n                            className={styles.check_box}\n                          />\n                          <img\n                            alt={`${color.identifier} mana symbol`}\n                            src={symbols[color.symbol]}\n                            className={styles.mana_symbol}\n                          ></img>\n                        </Box>\n                      );\n                    })}\n                  </FormGroup>\n                </FormControl>\n                <FormControl\n                  component=\"fieldset\"\n                  className={styles.strat_filters}\n                >\n                  <FormLabel component=\"legend\">Strategies</FormLabel>\n                  <FormGroup row={true} className={styles.strats_container}>\n                    {[\"AGGRO\", \"CONTROL\", \"COMBO\", \"MIDRANGE\"].map(\n                      (strat, i) => {\n                        return (\n                          <Box className={styles.check_box_container} key={i}>\n                            <Checkbox\n                              color=\"primary\"\n                              checked={checkedStrat === strat}\n                              onChange={handleChangeStratCheck}\n                              name={strat}\n                              className={styles.check_box}\n                            />\n                            <Typography variant=\"caption\">\n                              {strat[0].toUpperCase() +\n                                strat.slice(1).toLowerCase()}\n                            </Typography>\n                          </Box>\n                        );\n                      }\n                    )}\n                  </FormGroup>\n                </FormControl>\n              </AccordionDetails>\n            </Accordion>\n          </Box>\n        </Box>\n        <Box></Box>\n        <Box className={styles.submit_container}>\n          <Button className={styles.button_submit} type=\"submit\">\n            Search\n          </Button>\n        </Box>\n      </form>\n    </Box>\n  );\n};\n\nexport default DeckFilter;\n","/home/james/Desktop/deckstars/client/src/styles/deckfilterstyles.js",[],{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":2,"column":17,"nodeType":"204","messageId":"205","endLine":2,"endColumn":26},{"ruleId":"202","severity":1,"message":"206","line":3,"column":32,"nodeType":"204","messageId":"205","endLine":3,"endColumn":38},{"ruleId":"202","severity":1,"message":"207","line":4,"column":10,"nodeType":"204","messageId":"205","endLine":4,"endColumn":20},{"ruleId":"202","severity":1,"message":"208","line":7,"column":8,"nodeType":"204","messageId":"205","endLine":7,"endColumn":20},{"ruleId":"202","severity":1,"message":"209","line":32,"column":11,"nodeType":"204","messageId":"205","endLine":32,"endColumn":24},{"ruleId":"202","severity":1,"message":"210","line":12,"column":29,"nodeType":"204","messageId":"205","endLine":12,"endColumn":39},{"ruleId":"202","severity":1,"message":"203","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":26},{"ruleId":"202","severity":1,"message":"211","line":2,"column":25,"nodeType":"204","messageId":"205","endLine":2,"endColumn":36},{"ruleId":"202","severity":1,"message":"212","line":2,"column":38,"nodeType":"204","messageId":"205","endLine":2,"endColumn":47},{"ruleId":"202","severity":1,"message":"208","line":3,"column":8,"nodeType":"204","messageId":"205","endLine":3,"endColumn":20},{"ruleId":"202","severity":1,"message":"213","line":1,"column":29,"nodeType":"204","messageId":"205","endLine":1,"endColumn":37},{"ruleId":"202","severity":1,"message":"214","line":2,"column":28,"nodeType":"204","messageId":"205","endLine":2,"endColumn":38},{"ruleId":"202","severity":1,"message":"215","line":5,"column":8,"nodeType":"204","messageId":"205","endLine":5,"endColumn":16},{"ruleId":"202","severity":1,"message":"216","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":14},{"ruleId":"202","severity":1,"message":"217","line":24,"column":5,"nodeType":"204","messageId":"205","endLine":24,"endColumn":15},{"ruleId":"202","severity":1,"message":"203","line":1,"column":27,"nodeType":"204","messageId":"205","endLine":1,"endColumn":36},{"ruleId":"202","severity":1,"message":"218","line":8,"column":3,"nodeType":"204","messageId":"205","endLine":8,"endColumn":13},{"ruleId":"202","severity":1,"message":"219","line":13,"column":8,"nodeType":"204","messageId":"205","endLine":13,"endColumn":17},{"ruleId":"202","severity":1,"message":"220","line":34,"column":5,"nodeType":"204","messageId":"205","endLine":34,"endColumn":19},{"ruleId":"202","severity":1,"message":"221","line":36,"column":5,"nodeType":"204","messageId":"205","endLine":36,"endColumn":14},{"ruleId":"202","severity":1,"message":"222","line":44,"column":10,"nodeType":"204","messageId":"205","endLine":44,"endColumn":20},{"ruleId":"202","severity":1,"message":"223","line":44,"column":22,"nodeType":"204","messageId":"205","endLine":44,"endColumn":35},{"ruleId":"202","severity":1,"message":"224","line":60,"column":9,"nodeType":"204","messageId":"205","endLine":60,"endColumn":21},{"ruleId":"202","severity":1,"message":"225","line":152,"column":9,"nodeType":"204","messageId":"205","endLine":152,"endColumn":25},{"ruleId":"202","severity":1,"message":"226","line":153,"column":11,"nodeType":"204","messageId":"205","endLine":153,"endColumn":14},{"ruleId":"202","severity":1,"message":"227","line":1,"column":8,"nodeType":"204","messageId":"205","endLine":1,"endColumn":13},{"ruleId":"202","severity":1,"message":"228","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":27},{"ruleId":"202","severity":1,"message":"229","line":5,"column":3,"nodeType":"204","messageId":"205","endLine":5,"endColumn":13},{"ruleId":"202","severity":1,"message":"230","line":10,"column":3,"nodeType":"204","messageId":"205","endLine":10,"endColumn":19},{"ruleId":"202","severity":1,"message":"231","line":11,"column":3,"nodeType":"204","messageId":"205","endLine":11,"endColumn":17},{"ruleId":"198","replacedBy":"232"},{"ruleId":"200","replacedBy":"233"},{"ruleId":"202","severity":1,"message":"216","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":14},{"ruleId":"202","severity":1,"message":"234","line":15,"column":9,"nodeType":"204","messageId":"205","endLine":15,"endColumn":16},{"ruleId":"235","severity":1,"message":"236","line":49,"column":6,"nodeType":"237","endLine":49,"endColumn":8,"suggestions":"238"},{"ruleId":"202","severity":1,"message":"203","line":1,"column":39,"nodeType":"204","messageId":"205","endLine":1,"endColumn":48},{"ruleId":"202","severity":1,"message":"239","line":9,"column":3,"nodeType":"204","messageId":"205","endLine":9,"endColumn":11},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'SplashPage' is defined but never used.","'PrivateRoute' is defined but never used.","'authenticated' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'useLocation' is defined but never used.","'useParams' is defined but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","'EditIcon' is defined but never used.","'Link' is defined but never used.","'setFilters' is assigned a value but never used.","'IconButton' is defined but never used.","'ImageIcon' is defined but never used.","'setCurrentDeck' is assigned a value but never used.","'setIsEdit' is assigned a value but never used.","'deckFormat' is assigned a value but never used.","'setDeckFormat' is assigned a value but never used.","'handleSetImg' is assigned a value but never used.","'handleEditSubmit' is assigned a value but never used.","'res' is assigned a value but never used.","'React' is defined but never used.","'useContext' is defined but never used.","'Typograhpy' is defined but never used.","'FormControlLabel' is defined but never used.","'FormHelperText' is defined but never used.",["240"],["241"],"'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filters.cards', 'filters.colors', 'filters.deckStrat', 'filters.name', 'page', and 'setCurrentDeck'. Either include them or remove the dependency array.","ArrayExpression",["242"],"'CheckBox' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"243","fix":"244"},"Update the dependencies array to be: [filters.cards, filters.colors, filters.deckStrat, filters.name, page, setCurrentDeck]",{"range":"245","text":"246"},[1379,1381],"[filters.cards, filters.colors, filters.deckStrat, filters.name, page, setCurrentDeck]"]