[{"/home/james/Desktop/deckstars/client/src/index.js":"1","/home/james/Desktop/deckstars/client/src/App.js":"2","/home/james/Desktop/deckstars/client/src/components/SplashPage.js":"3","/home/james/Desktop/deckstars/client/src/services/auth.js":"4","/home/james/Desktop/deckstars/client/src/MainContext.js":"5","/home/james/Desktop/deckstars/client/src/theme/mui_theme.js":"6","/home/james/Desktop/deckstars/client/src/styles/navbarstyles.js":"7","/home/james/Desktop/deckstars/client/src/components/nav/NavBar.js":"8","/home/james/Desktop/deckstars/client/src/components/nav/NavLogin.js":"9","/home/james/Desktop/deckstars/client/src/components/nav/NavMenu.js":"10","/home/james/Desktop/deckstars/client/src/components/SignUpForm.js":"11","/home/james/Desktop/deckstars/client/src/components/HomePage.js":"12","/home/james/Desktop/deckstars/client/src/components/PrivateRoute.js":"13","/home/james/Desktop/deckstars/client/src/styles/homepagestyles.js":"14","/home/james/Desktop/deckstars/client/src/styles/signupformstyles.js":"15","/home/james/Desktop/deckstars/client/src/styles/navmenustyles.js":"16","/home/james/Desktop/deckstars/client/src/components/DeckDetails.js":"17","/home/james/Desktop/deckstars/client/src/components/DeckInfo.js":"18","/home/james/Desktop/deckstars/client/src/components/homepage/HomePageLeft.js":"19","/home/james/Desktop/deckstars/client/src/components/homepage/DeckCards.js":"20","/home/james/Desktop/deckstars/client/src/components/MUI_custom/Custom_Accordion.js":"21","/home/james/Desktop/deckstars/client/src/components/homepage/CardBrowser.js":"22","/home/james/Desktop/deckstars/client/src/components/homepage/DeckForm.js":"23","/home/james/Desktop/deckstars/client/src/services/buttons.js":"24","/home/james/Desktop/deckstars/client/src/styles/deckformstyles.js":"25","/home/james/Desktop/deckstars/client/src/styles/homepageleftstyles.js":"26","/home/james/Desktop/deckstars/client/src/styles/deckcardstyles.js":"27","/home/james/Desktop/deckstars/client/src/components/homepage/CardFilter.js":"28","/home/james/Desktop/deckstars/client/src/components/MUI_custom/Filters_Custom_Accordion.js":"29","/home/james/Desktop/deckstars/client/src/styles/cardbrowserstyles.js":"30","/home/james/Desktop/deckstars/client/src/components/deckcards/CustomDetails.js":"31"},{"size":305,"mtime":1611868324515,"results":"32","hashOfConfig":"33"},{"size":1486,"mtime":1612545393597,"results":"34","hashOfConfig":"33"},{"size":192,"mtime":1612290856265,"results":"35","hashOfConfig":"33"},{"size":1235,"mtime":1612284859382,"results":"36","hashOfConfig":"33"},{"size":2359,"mtime":1612550463066,"results":"37","hashOfConfig":"33"},{"size":742,"mtime":1611800004853,"results":"38","hashOfConfig":"33"},{"size":1684,"mtime":1612138576137,"results":"39","hashOfConfig":"33"},{"size":1179,"mtime":1611869813027,"results":"40","hashOfConfig":"33"},{"size":3366,"mtime":1612284850478,"results":"41","hashOfConfig":"33"},{"size":1591,"mtime":1612213092728,"results":"42","hashOfConfig":"33"},{"size":2933,"mtime":1612482647978,"results":"43","hashOfConfig":"33"},{"size":3271,"mtime":1612491659352,"results":"44","hashOfConfig":"33"},{"size":578,"mtime":1611861912966,"results":"45","hashOfConfig":"33"},{"size":1410,"mtime":1612492537526,"results":"46","hashOfConfig":"33"},{"size":641,"mtime":1612138048774,"results":"47","hashOfConfig":"33"},{"size":143,"mtime":1612138601960,"results":"48","hashOfConfig":"33"},{"size":2676,"mtime":1612552851492,"results":"49","hashOfConfig":"33"},{"size":2600,"mtime":1612556105458,"results":"50","hashOfConfig":"33"},{"size":4301,"mtime":1612554926970,"results":"51","hashOfConfig":"33"},{"size":6942,"mtime":1612483766383,"results":"52","hashOfConfig":"33"},{"size":1297,"mtime":1612299831470,"results":"53","hashOfConfig":"33"},{"size":6857,"mtime":1612557182120,"results":"54","hashOfConfig":"33"},{"size":9162,"mtime":1612558681198,"results":"55","hashOfConfig":"33"},{"size":1835,"mtime":1612557283221,"results":"56","hashOfConfig":"33"},{"size":1665,"mtime":1612493218856,"results":"57","hashOfConfig":"33"},{"size":1595,"mtime":1612289866230,"results":"58","hashOfConfig":"33"},{"size":2320,"mtime":1612492194938,"results":"59","hashOfConfig":"33"},{"size":7958,"mtime":1612555601805,"results":"60","hashOfConfig":"33"},{"size":1048,"mtime":1612299969961,"results":"61","hashOfConfig":"33"},{"size":2915,"mtime":1612472840046,"results":"62","hashOfConfig":"33"},{"size":13856,"mtime":1612492169407,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1p0v3vd",{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/home/james/Desktop/deckstars/client/src/index.js",[],["134","135"],"/home/james/Desktop/deckstars/client/src/App.js",["136"],"import { createBrowserHistory } from \"history\";\nimport React, { useEffect, useContext } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { SplashPage } from \"./components/SplashPage.js\";\nimport { MainContext } from \"./MainContext\";\n\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport NavBar from \"./components/nav/NavBar\";\nimport HomePage from \"./components/HomePage\";\n\nimport { Box, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nconst history = createBrowserHistory();\n\nconst useStyles = makeStyles((theme) => ({\n  window: {\n    width: \"100vw\",\n\n    height: \"100%\",\n    margin: \"0px\",\n    padding: \"0px\",\n  },\n  app: {},\n  slipbop: {\n    position: \"static\",\n    zIndex: 3,\n    width: \"100%\",\n  },\n}));\n\nfunction App() {\n  const { authenticated } = useContext(MainContext);\n  const { loading } = useContext(MainContext);\n\n  const styles = useStyles();\n\n  // useEffect(() => {}, [loading]);\n\n  if (loading) {\n    return <CircularProgress />;\n  }\n\n  return (\n    <Box className={styles.window}>\n      <BrowserRouter history={history}>\n        <header className={styles.slipbop}>\n          <NavBar />\n        </header>\n        <Switch>\n          {authenticated ? (\n            <PrivateRoute path=\"/\" component={HomePage} />\n          ) : (\n            <Route exact path=\"/\" component={SplashPage} />\n          )}\n        </Switch>\n      </BrowserRouter>\n    </Box>\n  );\n}\n\nexport default App;\n","/home/james/Desktop/deckstars/client/src/components/SplashPage.js",[],"/home/james/Desktop/deckstars/client/src/services/auth.js",[],"/home/james/Desktop/deckstars/client/src/MainContext.js",[],"/home/james/Desktop/deckstars/client/src/theme/mui_theme.js",[],"/home/james/Desktop/deckstars/client/src/styles/navbarstyles.js",[],"/home/james/Desktop/deckstars/client/src/components/nav/NavBar.js",[],"/home/james/Desktop/deckstars/client/src/components/nav/NavLogin.js",[],"/home/james/Desktop/deckstars/client/src/components/nav/NavMenu.js",[],"/home/james/Desktop/deckstars/client/src/components/SignUpForm.js",["137"],"import React, { useEffect, useState, useContext } from \"react\";\nimport { Box, Typography, Button, TextField } from \"@material-ui/core\";\nimport { MainContext } from \"../MainContext\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport signupformstyles from \"../styles/signupformstyles\";\n\nimport { signUp } from \"../services/auth\";\n\nconst useStyles = makeStyles((theme) => signupformstyles);\n\nconst SignUpForm = ({ setSignUpOpen }) => {\n  const { setAuthenticated, setLoading, setUser } = useContext(MainContext);\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [checkPassword, setCheckPassword] = useState(\"\");\n\n  const styles = useStyles();\n\n  useEffect(() => {}, []);\n\n  const changeUsername = (e) => {\n    e.preventDefault();\n    setUsername(e.target.value);\n  };\n\n  const changeEmail = (e) => {\n    e.preventDefault();\n    setEmail(e.target.value);\n  };\n\n  const changePassword = (e) => {\n    e.preventDefault();\n    setPassword(e.target.value);\n  };\n\n  const changeCheckPassword = (e) => {\n    e.preventDefault();\n    setCheckPassword(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (password === checkPassword) {\n      let user = await signUp(username, email, password);\n      if (user.message === \"Username or Email in use.\") {\n        window.alert(\"Username or Email in use.\");\n      } else {\n        setUser(user.user);\n        setAuthenticated(true);\n      }\n    } else {\n      window.alert(\"Passwords do not match\");\n    }\n  };\n\n  return (\n    <Box className={styles.form_container}>\n      <Typography variant=\"h2\" className={styles.form_title}>\n        Sign Up\n      </Typography>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <TextField\n          required\n          className={styles.form_field}\n          InputProps={{ className: styles.input }}\n          onChange={changeUsername}\n          placeholder=\"username\"\n          type=\"text\"\n          autoFocus={true}\n        ></TextField>\n        <TextField\n          required\n          className={styles.form_field}\n          InputProps={{ className: styles.input }}\n          onChange={changeEmail}\n          placeholder=\"email\"\n          type=\"text\"\n        ></TextField>\n        <TextField\n          required\n          className={styles.form_field}\n          InputProps={{ className: styles.input }}\n          onChange={changePassword}\n          placeholder=\"password\"\n          type=\"password\"\n        ></TextField>\n        <TextField\n          required\n          className={styles.form_field}\n          InputProps={{ className: styles.input }}\n          onChange={changeCheckPassword}\n          placeholder=\"confirm password\"\n          type=\"password\"\n        ></TextField>\n        <Button type=\"submit\">Sign up for an account</Button>\n      </form>\n    </Box>\n  );\n};\n\nexport default SignUpForm;\n","/home/james/Desktop/deckstars/client/src/components/HomePage.js",["138","139","140"],"import React, { useEffect, useContext } from \"react\";\nimport { Switch, useLocation, useParams } from \"react-router-dom\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport HomePageLeft from \"./homepage/HomePageLeft\";\nimport DeckDetails from \"./DeckDetails\";\nimport DeckCards from \"./homepage/DeckCards\";\nimport CardBrowser from \"./homepage/CardBrowser\";\nimport DeckForm from \"./homepage/DeckForm\";\nimport CardFilter from \"./homepage/CardFilter\";\nimport { MainContext } from \"../MainContext\";\nimport { Box, Modal, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nimport homepagestyles from \"../styles/homepagestyles\";\n\nconst useStyles = makeStyles((theme) => homepagestyles);\n\nconst HomePage = () => {\n  const {\n    modalImgOpen,\n    modalImgSrc,\n    modalRulingsOpen,\n    rulings,\n    setModalImgOpen,\n    setModalImgSrc,\n    setModalRulingsOpen,\n    setRulings,\n  } = useContext(MainContext);\n  const styles = useStyles();\n\n  const handleImgClose = (e) => {\n    e.preventDefault();\n    setModalImgOpen(false);\n    setModalImgSrc([]);\n  };\n\n  const handleRulingsClose = (e) => {\n    e.preventDefault();\n    setModalRulingsOpen(false);\n    setRulings([]);\n  };\n\n  // useEffect(() => {}, []);\n\n  return (\n    <div className={styles.homepage_container}>\n      <Modal\n        open={modalImgOpen}\n        onClose={handleImgClose}\n        className={styles.modal}\n        aria-labelledby=\"Card Image\"\n        aria-describedby=\"This is an image of a selected card.\"\n      >\n        <Box className={styles.modal}>\n          {modalImgSrc.map((src, i) => {\n            return (\n              <img\n                className={styles.modal_img}\n                alt=\"A large version of selected card\"\n                src={src}\n                key={i}\n              ></img>\n            );\n          })}\n        </Box>\n      </Modal>\n      <Modal\n        open={modalRulingsOpen}\n        onClose={handleRulingsClose}\n        className={styles.modal_ruling}\n        aria-labelledby=\"Rulings\"\n        aria-describedby=\"This is a set of rulings for a card.\"\n      >\n        <Box className={styles.modal_ruling_box}>\n          {rulings.map((ruling, i) => {\n            return (\n              <Box className={styles.ruling}>\n                <Typography variant=\"Body2\">{ruling.date}</Typography>\n                <Typography variant=\"caption\">{ruling.text}</Typography>\n              </Box>\n            );\n          })}\n        </Box>\n      </Modal>\n      <Box className={styles.homepage_top}>\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={CardFilter} />\n        </Switch>\n      </Box>\n      <Box className={styles.homepage_bottom}>\n        <HomePageLeft className={styles.homepage_left} />\n        <Box className={styles.homepage_center}>\n          <Switch>\n            <PrivateRoute exact path=\"/deck/:deckId\" component={DeckCards} />\n            <PrivateRoute path=\"/\" component={CardBrowser} />\n          </Switch>\n        </Box>\n        <Box className={styles.homepage_right}>\n          <Switch>\n            <PrivateRoute exact path=\"/deck/:deckId\" component={DeckDetails} />\n            <PrivateRoute path=\"/\" component={DeckForm} />\n          </Switch>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default HomePage;\n","/home/james/Desktop/deckstars/client/src/components/PrivateRoute.js",[],"/home/james/Desktop/deckstars/client/src/styles/homepagestyles.js",[],"/home/james/Desktop/deckstars/client/src/styles/signupformstyles.js",[],"/home/james/Desktop/deckstars/client/src/styles/navmenustyles.js",[],"/home/james/Desktop/deckstars/client/src/components/DeckDetails.js",["141"],"import React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { MainContext } from \"../MainContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  deck_details_container: {\n    color: \"white\",\n    padding: \"10px\",\n  },\n  deck_record: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  name_and_edit_button_container: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  edit_button: {\n    backgroundColor: theme.palette.warning.main,\n    \"&:hover\": {\n      backgroundColor: theme.palette.warning.dark,\n    },\n  },\n}));\n\nconst DeckDetails = () => {\n  const { currentDeck, setIsEdit, setNewDeck } = useContext(MainContext);\n  const history = useHistory();\n\n  const styles = useStyles();\n\n  const handleEdit = (e) => {\n    // e.preventDefault();\n    let tempDeck = {\n      id: currentDeck.id,\n      name: currentDeck.name,\n      description: currentDeck.description,\n      mainDeck: [\n        ...currentDeck.mainDeck.map((slot) => {\n          return {\n            id: slot.card.id,\n            quantity: slot.quantity,\n            name: slot.card.name,\n          };\n        }),\n      ],\n      sideBoard: [\n        ...currentDeck.sideBoard.map((slot) => {\n          return {\n            id: slot.card.id,\n            quantity: slot.quantity,\n            name: slot.card.name,\n          };\n        }),\n      ],\n    };\n    setNewDeck(tempDeck);\n    setIsEdit(true);\n    history.push(\"/\");\n  };\n\n  if (!currentDeck) {\n    return null;\n  }\n\n  return (\n    <Box className={styles.deck_details_container}>\n      <Box className={styles.name_and_edit_button_container}>\n        <Typography variant=\"h5\">{currentDeck.name}</Typography>\n        <Button className={styles.edit_button} onClick={(e) => handleEdit(e)}>\n          Edit\n        </Button>\n      </Box>\n      <Typography variant=\"body2\">\n        Created By: {currentDeck.user.username}\n      </Typography>\n      <Typography variant=\"body2\">Format: {currentDeck.format}</Typography>\n      <Box className={styles.deck_record}>\n        <Typography variant=\"caption\">Wins: {currentDeck.wins}</Typography>\n        <Typography variant=\"caption\">Losses: {currentDeck.losses}</Typography>\n        <Typography variant=\"caption\">\n          Winrate:{\" \"}\n          {currentDeck.wins\n            ? currentDeck.wins / (currentDeck.wins + currentDeck.losses)\n            : 0}\n        </Typography>\n      </Box>\n      <Box>\n        <Typography variant=\"body1\">{currentDeck.description}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default DeckDetails;\n","/home/james/Desktop/deckstars/client/src/components/DeckInfo.js",["142","143"],"import React, { useContext } from \"react\";\nimport { Link, withRouter, useHistory } from \"react-router-dom\";\nimport { Box, Typography, IconButton } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nimport { MainContext } from \"../MainContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    textDecoration: \"none\",\n    color: \"white\",\n  },\n  deckinfo_container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    backgroundColor: theme.palette.secondary.light,\n    height: \"80px\",\n    maxWidth: \"100%\",\n    marginBottom: \"5px\",\n    padding: \"10px\",\n  },\n  row_one: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    margin: \"5px\",\n  },\n  row_two: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    margin: \"5px\",\n  },\n}));\n\nconst DeckInfo = ({ deck, setDeleteOpen, setDeckToDelete }) => {\n  const { setCurrentDeck, setFilters } = useContext(MainContext);\n  const styles = useStyles();\n  const handleClick = async (e) => {\n    let foundDeck = await fetch(`/api/decks/${deck.id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const parsedDeck = await foundDeck.json();\n    setFilters({\n      name: \"\",\n      colors: [],\n      cardTypes: [],\n    });\n    setCurrentDeck(parsedDeck);\n  };\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    setDeckToDelete(deck.id);\n    setDeleteOpen(true);\n  };\n\n  return (\n    <Link\n      to={`/deck/${deck.id}`}\n      key={deck.id}\n      className={styles.link}\n      onClick={(e) => handleClick(e)}\n    >\n      <Box className={styles.deckinfo_container}>\n        <Box className={styles.row_one}>\n          <Typography>{deck.name}</Typography>\n          <Typography>{deck.format}</Typography>\n        </Box>\n        <Box className={styles.row_two}>\n          <Typography variant=\"body2\">Wins: {deck.wins}</Typography>\n          <Typography variant=\"body2\">Losses: {deck.losses}</Typography>\n          <Typography variant=\"body2\">\n            Winrate: {deck.wins ? deck.wins / (deck.wins + deck.losses) : 0}\n          </Typography>\n        </Box>\n        <Box className={styles.delete_holder}>\n          <IconButton onClick={(e) => handleDelete(e)} size=\"small\">\n            <DeleteIcon color=\"error\" fontSize=\"small\" id={deck.id} />\n            <Typography variant=\"caption\" color=\"error\">\n              Delete Deck\n            </Typography>\n          </IconButton>\n        </Box>\n      </Box>\n    </Link>\n  );\n};\n\nexport default withRouter(DeckInfo);\n","/home/james/Desktop/deckstars/client/src/components/homepage/HomePageLeft.js",["144"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { MainContext } from \"../../MainContext\";\nimport {\n  Box,\n  Button,\n  Typography,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Modal,\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport homepageleftstyles from \"../../styles/homepageleftstyles\";\nimport DeckInfo from \"../DeckInfo\";\n\nconst useStyles = makeStyles((theme) => homepageleftstyles);\n\nconst HomePageLeft = () => {\n  const { user, setIsEdit, setNewDeck, setUser } = useContext(MainContext);\n  const [deleteOpen, setDeleteOpen] = useState(false);\n  const [deckToDelete, setDeckToDelete] = useState(null);\n  const styles = useStyles();\n\n  const history = useHistory();\n\n  useEffect(() => {}, [user]);\n\n  const handleClose = (e) => {\n    setDeleteOpen(false);\n  };\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    setDeleteOpen(false);\n  };\n\n  const handleButtonClick = (e) => {\n    e.preventDefault();\n    setNewDeck({\n      name: \"\",\n      description: \"\",\n      mainDeck: [],\n      sideBoard: [],\n    });\n    setIsEdit(false);\n    history.push(\"/\");\n  };\n\n  const handleDeckDelete = async (e) => {\n    e.preventDefault();\n    await fetch(`/api/decks/${deckToDelete}`, {\n      method: \"DELETE\",\n      \"Content-Type\": \"application/json\",\n      credentials: \"include\",\n    });\n    // const parsed = await res.json();\n    const newDecks = user.decks.filter((deck) => deck.id !== deckToDelete);\n    const tempUser = { ...user };\n    tempUser.decks = newDecks;\n    setUser(tempUser);\n    setDeckToDelete(0);\n    setDeleteOpen(false);\n    setNewDeck({\n      name: \"\",\n      description: \"\",\n      mainDeck: [],\n      sideBoard: [],\n    });\n    history.push(\"/\");\n  };\n  return (\n    <Box className={styles.homepage_left}>\n      <Modal\n        open={deleteOpen}\n        onClose={handleClose}\n        className={styles.modal}\n        aria-labelledby=\"Delete Deck\"\n        aria-describedby=\"This is asking you if you're sure you want to delete a deck.\"\n      >\n        <Box className={styles.modal_box}>\n          <Typography>Are you sure you want to delete this deck?</Typography>\n          <Button\n            className={styles.confirm_delete}\n            onClick={(e) => handleDeckDelete(e)}\n          >\n            Confirm\n          </Button>\n          <Button\n            className={styles.cancel_delete}\n            onClick={(e) => handleClick(e)}\n          >\n            Cancel\n          </Button>\n        </Box>\n      </Modal>\n      <Box className={styles.fixed}>\n        <Accordion square={true} className={styles.accordion}>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon color=\"primary\" />}\n            aria-controls=\"created decks\"\n          >\n            <Typography>Created Decks</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Box className={styles.accordion_expanded}>\n              {user.decks.map((deck) => (\n                <DeckInfo\n                  key={deck.id}\n                  deck={deck}\n                  setDeleteOpen={setDeleteOpen}\n                  setDeckToDelete={setDeckToDelete}\n                />\n              ))}\n            </Box>\n          </AccordionDetails>\n        </Accordion>\n        <Accordion square={true} className={styles.accordion}>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon color=\"primary\" />}\n            aria-controls=\"liked decks\"\n          >\n            <Typography>Liked Decks</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Box className={styles.accordion_expanded}>\n              {user.deckLikes.map((deck) => (\n                <DeckInfo\n                  key={deck.id}\n                  deck={deck}\n                  setDeleteOpen={setDeleteOpen}\n                  setDeckToDelete={setDeckToDelete}\n                />\n              ))}\n            </Box>\n          </AccordionDetails>\n        </Accordion>\n        <Button\n          className={styles.button_new_deck}\n          onClick={(e) => handleButtonClick(e)}\n        >\n          Create a new deck\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default HomePageLeft;\n","/home/james/Desktop/deckstars/client/src/components/homepage/DeckCards.js",[],"/home/james/Desktop/deckstars/client/src/components/MUI_custom/Custom_Accordion.js",[],"/home/james/Desktop/deckstars/client/src/components/homepage/CardBrowser.js",["145"],"/home/james/Desktop/deckstars/client/src/components/homepage/DeckForm.js",["146","147","148","149","150","151","152","153"],"/home/james/Desktop/deckstars/client/src/services/buttons.js",["154","155"],"/home/james/Desktop/deckstars/client/src/styles/deckformstyles.js",[],"/home/james/Desktop/deckstars/client/src/styles/homepageleftstyles.js",[],"/home/james/Desktop/deckstars/client/src/styles/deckcardstyles.js",[],"/home/james/Desktop/deckstars/client/src/components/homepage/CardFilter.js",["156","157","158"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { MainContext } from \"../../MainContext\";\nimport {\n  Box,\n  Typograhpy,\n  Typography,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  FormControlLabel,\n  FormHelperText,\n  Checkbox,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from \"../MUI_custom/Filters_Custom_Accordion\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: \"100%\",\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"70%\",\n    height: \"100%\",\n    display: \"grid\",\n    gridTemplateColumns: \"6fr 1fr 8fr 1fr 2fr\",\n  },\n  search_container: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  text_field: {\n    backgroundColor: theme.palette.secondary.light,\n  },\n  filters_container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    color: \"white\",\n  },\n  filters: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"56px\",\n    width: \"100%\",\n  },\n  accordion: {\n    height: \"100%\",\n    width: \"100%\",\n    zIndex: 3,\n    backgroundColor: theme.palette.secondary.light,\n    color: \"white\",\n    // border: \"1px solid white\",\n  },\n  accordion_summary: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    border: \"1px solid white\",\n    boxSizing: \"border-box\",\n  },\n  expanded_details: {\n    backgroundColor: theme.palette.secondary.main,\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  card_type_filters: {\n    display: \"flex\",\n  },\n  submit_container: {\n    display: \"flex\",\n    height: \"100%\",\n    alignItems: \"center\",\n  },\n  button_submit: {\n    backgroundColor: theme.palette.primary.main,\n    height: \"50px\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.light,\n    },\n  },\n  types_container: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr\",\n  },\n  check_box_container: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  check_box: {\n    color: theme.palette.secondary.light,\n  },\n  colors_container: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: \"0px 20px 0px 0px\",\n  },\n  mana_symbol: {\n    height: \"2rem\",\n    width: \"auto\",\n  },\n}));\n\nconst CardFilter = () => {\n  const { symbols, setFilters, setPage } = useContext(MainContext);\n  const [searchString, setSearchString] = useState(\"\");\n  const [cardTypes, setCardTypes] = useState([]);\n  const [checkedTypes, setCheckedTypes] = useState([]);\n  const [checkedColors, setCheckedColors] = useState([]);\n\n  const styles = useStyles();\n\n  const colors = [\n    { identifier: \"W\", symbol: \"{W}\" },\n    { identifier: \"U\", symbol: \"{U}\" },\n    { identifier: \"B\", symbol: \"{B}\" },\n    { identifier: \"R\", symbol: \"{R}\" },\n    { identifier: \"G\", symbol: \"{G}\" },\n    { identifier: \"C\", symbol: \"{C}\" },\n  ];\n\n  useEffect(() => {\n    (async () => {\n      const res = await fetch(\"/api/cardtypes\");\n      const parsed = await res.json();\n      setCardTypes(parsed);\n    })();\n  }, []);\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setSearchString(e.target.value);\n  };\n\n  const handleChangeTypeCheck = (e) => {\n    if (checkedTypes.includes(e.target.name)) {\n      setCheckedTypes([\n        ...checkedTypes.filter((name) => name !== e.target.name),\n      ]);\n    } else {\n      setCheckedTypes([...checkedTypes, e.target.name]);\n    }\n  };\n\n  const handleChangeColorCheck = (e) => {\n    if (checkedColors.includes(e.target.name)) {\n      setCheckedColors([\n        ...checkedColors.filter((name) => name !== e.target.name),\n      ]);\n    } else {\n      setCheckedColors([...checkedColors, e.target.name]);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setPage(0);\n    const queryObj = {\n      name: \"\",\n      colors: [],\n      cardTypes: [],\n    };\n\n    if (searchString) {\n      queryObj[\"name\"] = searchString;\n    }\n\n    if (checkedColors.length > 0) {\n      queryObj[\"colors\"] = checkedColors;\n    }\n\n    if (checkedTypes.length > 0) {\n      queryObj[\"cardTypes\"] = checkedTypes;\n    }\n    setFilters(queryObj);\n\n    // const res = await fetch(`/api/cards/search/results${queryString}`);\n    // // const parsed = await res.json();\n    // // setCards(parsed);\n    // let parsed = await res.json();\n    // setCards(parsed);\n  };\n\n  return (\n    <Box className={styles.container}>\n      <form className={styles.form} onSubmit={(e) => handleSubmit(e)}>\n        <Box className={styles.search_container}>\n          <TextField\n            className={styles.text_field}\n            variant=\"outlined\"\n            placeholder=\"Search for a card\"\n            onChange={(e) => handleChange(e)}\n            fullWidth={true}\n          ></TextField>\n        </Box>\n        <Box></Box>\n        <Box className={styles.filters_container}>\n          <Box className={styles.filters}>\n            <Accordion className={styles.accordion}>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon color=\"primary\" />}\n                aria-controls=\"expand filters\"\n                className={styles.accordion_summary}\n              >\n                <Typography>Filters</Typography>\n              </AccordionSummary>\n              <AccordionDetails className={styles.expanded_details}>\n                <FormControl\n                  component=\"fieldset\"\n                  className={styles.card_type_filters}\n                >\n                  <FormLabel component=\"Legend\">Card Types</FormLabel>\n                  <FormGroup row={true} className={styles.types_container}>\n                    {cardTypes.map((type, i) => {\n                      return (\n                        <Box className={styles.check_box_container} key={i}>\n                          <Checkbox\n                            color=\"primary\"\n                            checked={checkedTypes.includes(type.name)}\n                            onChange={handleChangeTypeCheck}\n                            name={type.name}\n                            className={styles.check_box}\n                          />\n                          <Typography variant=\"caption\">{type.name}</Typography>\n                        </Box>\n                      );\n                    })}\n                  </FormGroup>\n                </FormControl>\n                <FormControl\n                  component=\"fieldset\"\n                  className={styles.color_filters}\n                >\n                  <FormLabel component=\"Legend\">Colors</FormLabel>\n                  <FormGroup row={true} className={styles.colors_container}>\n                    {colors.map((color, i) => {\n                      return (\n                        <Box className={styles.check_box_container} key={i}>\n                          <Checkbox\n                            color=\"primary\"\n                            checked={checkedColors.includes(color.identifier)}\n                            onChange={handleChangeColorCheck}\n                            name={color.identifier}\n                            className={styles.check_box}\n                          />\n                          <img\n                            alt={`${color.identifier} mana symbol`}\n                            src={symbols[color.symbol]}\n                            className={styles.mana_symbol}\n                          ></img>\n                        </Box>\n                      );\n                    })}\n                  </FormGroup>\n                </FormControl>\n              </AccordionDetails>\n            </Accordion>\n          </Box>\n        </Box>\n        <Box></Box>\n        <Box className={styles.submit_container}>\n          <Button className={styles.button_submit} type=\"submit\">\n            Search\n          </Button>\n        </Box>\n      </form>\n    </Box>\n  );\n};\n\nexport default CardFilter;\n","/home/james/Desktop/deckstars/client/src/components/MUI_custom/Filters_Custom_Accordion.js",[],"/home/james/Desktop/deckstars/client/src/styles/cardbrowserstyles.js",[],"/home/james/Desktop/deckstars/client/src/components/deckcards/CustomDetails.js",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":2,"column":17,"nodeType":"165","messageId":"166","endLine":2,"endColumn":26},{"ruleId":"163","severity":1,"message":"167","line":12,"column":29,"nodeType":"165","messageId":"166","endLine":12,"endColumn":39},{"ruleId":"163","severity":1,"message":"164","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":26},{"ruleId":"163","severity":1,"message":"168","line":2,"column":18,"nodeType":"165","messageId":"166","endLine":2,"endColumn":29},{"ruleId":"163","severity":1,"message":"169","line":2,"column":31,"nodeType":"165","messageId":"166","endLine":2,"endColumn":40},{"ruleId":"163","severity":1,"message":"170","line":1,"column":29,"nodeType":"165","messageId":"166","endLine":1,"endColumn":37},{"ruleId":"163","severity":1,"message":"171","line":2,"column":28,"nodeType":"165","messageId":"166","endLine":2,"endColumn":38},{"ruleId":"163","severity":1,"message":"172","line":5,"column":8,"nodeType":"165","messageId":"166","endLine":5,"endColumn":16},{"ruleId":"163","severity":1,"message":"173","line":2,"column":10,"nodeType":"165","messageId":"166","endLine":2,"endColumn":14},{"ruleId":"163","severity":1,"message":"174","line":24,"column":5,"nodeType":"165","messageId":"166","endLine":24,"endColumn":15},{"ruleId":"163","severity":1,"message":"164","line":1,"column":27,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},{"ruleId":"163","severity":1,"message":"175","line":8,"column":3,"nodeType":"165","messageId":"166","endLine":8,"endColumn":13},{"ruleId":"163","severity":1,"message":"176","line":10,"column":8,"nodeType":"165","messageId":"166","endLine":10,"endColumn":17},{"ruleId":"163","severity":1,"message":"177","line":30,"column":5,"nodeType":"165","messageId":"166","endLine":30,"endColumn":19},{"ruleId":"163","severity":1,"message":"178","line":32,"column":5,"nodeType":"165","messageId":"166","endLine":32,"endColumn":14},{"ruleId":"163","severity":1,"message":"179","line":67,"column":9,"nodeType":"165","messageId":"166","endLine":67,"endColumn":21},{"ruleId":"163","severity":1,"message":"180","line":148,"column":9,"nodeType":"165","messageId":"166","endLine":148,"endColumn":25},{"ruleId":"163","severity":1,"message":"181","line":149,"column":11,"nodeType":"165","messageId":"166","endLine":149,"endColumn":14},{"ruleId":"163","severity":1,"message":"182","line":1,"column":8,"nodeType":"165","messageId":"166","endLine":1,"endColumn":13},{"ruleId":"163","severity":1,"message":"183","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":27},{"ruleId":"163","severity":1,"message":"184","line":5,"column":3,"nodeType":"165","messageId":"166","endLine":5,"endColumn":13},{"ruleId":"163","severity":1,"message":"185","line":10,"column":3,"nodeType":"165","messageId":"166","endLine":10,"endColumn":19},{"ruleId":"163","severity":1,"message":"186","line":11,"column":3,"nodeType":"165","messageId":"166","endLine":11,"endColumn":17},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setLoading' is assigned a value but never used.","'useLocation' is defined but never used.","'useParams' is defined but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","'EditIcon' is defined but never used.","'Link' is defined but never used.","'setFilters' is assigned a value but never used.","'IconButton' is defined but never used.","'ImageIcon' is defined but never used.","'setCurrentDeck' is assigned a value but never used.","'setIsEdit' is assigned a value but never used.","'handleSetImg' is assigned a value but never used.","'handleEditSubmit' is assigned a value but never used.","'res' is assigned a value but never used.","'React' is defined but never used.","'useContext' is defined but never used.","'Typograhpy' is defined but never used.","'FormControlLabel' is defined but never used.","'FormHelperText' is defined but never used.","no-global-assign","no-unsafe-negation"]